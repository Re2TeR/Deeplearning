{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "05acede3",
   "metadata": {},
   "source": [
    "# Pandas 시작하기\n",
    "## 데이터 집합 불러오기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "66f333b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#기본 셋팅\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "afd06cde",
   "metadata": {},
   "source": [
    "- read.csv method 사용, 호출할 때 sep의 속성값으로 \\t를 지정되었다고 알려주어야함"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "191a2ce5",
   "metadata": {},
   "outputs": [],
   "source": [
    "df=pd.read_csv('../doit_pandas-master\\data\\gapminder.tsv',sep='\\t')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e484ec48",
   "metadata": {},
   "source": [
    "- .head()를 통해 5개의 행을 출력함.\n",
    "- .type()을 이용해 자료형을 출력함.\n",
    "- .shape을 통해 행과 열의 크기를 확인할 수 있다.\n",
    "- .columns를 통해 데이터 프레임의 열 이름을 확인할 수 있다.\n",
    "- .dtypes를 통하여 각각을 구성하는 자료형의 값을 알 수 있다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0ae632ad",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       country continent  year  lifeExp       pop   gdpPercap\n",
      "0  Afghanistan      Asia  1952   28.801   8425333  779.445314\n",
      "1  Afghanistan      Asia  1957   30.332   9240934  820.853030\n",
      "2  Afghanistan      Asia  1962   31.997  10267083  853.100710\n",
      "3  Afghanistan      Asia  1967   34.020  11537966  836.197138\n",
      "4  Afghanistan      Asia  1972   36.088  13079460  739.981106\n"
     ]
    }
   ],
   "source": [
    "print(df.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "68b3e4c4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n"
     ]
    }
   ],
   "source": [
    "print(type(df))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f683d9d8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1704, 6)\n"
     ]
    }
   ],
   "source": [
    "print(df.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "1b0bc882",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['country', 'continent', 'year', 'lifeExp', 'pop', 'gdpPercap'], dtype='object')\n"
     ]
    }
   ],
   "source": [
    "print(df.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8e3dd9b4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "country       object\n",
      "continent     object\n",
      "year           int64\n",
      "lifeExp      float64\n",
      "pop            int64\n",
      "gdpPercap    float64\n",
      "dtype: object\n"
     ]
    }
   ],
   "source": [
    "print(df.dtypes)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "92af0d8f",
   "metadata": {},
   "source": [
    "## 데이터 추출하기\n",
    "### 열 단위 데이터 추출하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "85091010",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0       Afghanistan\n",
      "1       Afghanistan\n",
      "2       Afghanistan\n",
      "3       Afghanistan\n",
      "4       Afghanistan\n",
      "           ...     \n",
      "1699       Zimbabwe\n",
      "1700       Zimbabwe\n",
      "1701       Zimbabwe\n",
      "1702       Zimbabwe\n",
      "1703       Zimbabwe\n",
      "Name: country, Length: 1704, dtype: object\n"
     ]
    }
   ],
   "source": [
    "country_df=df['country']\n",
    "print(country_df)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8df7e0d8",
   "metadata": {},
   "source": [
    "- 리스트에 열 이름을 여러가지를 선택하면 한번에 모두 추출 할 수 있다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "a0d6ad10",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          country continent  year\n",
      "0     Afghanistan      Asia  1952\n",
      "1     Afghanistan      Asia  1957\n",
      "2     Afghanistan      Asia  1962\n",
      "3     Afghanistan      Asia  1967\n",
      "4     Afghanistan      Asia  1972\n",
      "...           ...       ...   ...\n",
      "1699     Zimbabwe    Africa  1987\n",
      "1700     Zimbabwe    Africa  1992\n",
      "1701     Zimbabwe    Africa  1997\n",
      "1702     Zimbabwe    Africa  2002\n",
      "1703     Zimbabwe    Africa  2007\n",
      "\n",
      "[1704 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "subset=df[['country','continent','year']]\n",
    "print(subset)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a19cf398",
   "metadata": {},
   "source": [
    "### 행 단위 데이터 추출하기\n",
    "- 열과는 다르게 loc, iloc 속성을 사용하여야 함\n",
    "- loc: 인덱스 기준으로 행 데이터 추출(자료형 이름)\n",
    "- iloc: 행 번호를 기준으로 행 데이터 추출(pandas의 df의 번호)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "4d2e6ced",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>continent</th>\n",
       "      <th>year</th>\n",
       "      <th>lifeExp</th>\n",
       "      <th>pop</th>\n",
       "      <th>gdpPercap</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1952</td>\n",
       "      <td>28.801</td>\n",
       "      <td>8425333</td>\n",
       "      <td>779.445314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1957</td>\n",
       "      <td>30.332</td>\n",
       "      <td>9240934</td>\n",
       "      <td>820.853030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1962</td>\n",
       "      <td>31.997</td>\n",
       "      <td>10267083</td>\n",
       "      <td>853.100710</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1967</td>\n",
       "      <td>34.020</td>\n",
       "      <td>11537966</td>\n",
       "      <td>836.197138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1972</td>\n",
       "      <td>36.088</td>\n",
       "      <td>13079460</td>\n",
       "      <td>739.981106</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       country continent  year  lifeExp       pop   gdpPercap\n",
       "0  Afghanistan      Asia  1952   28.801   8425333  779.445314\n",
       "1  Afghanistan      Asia  1957   30.332   9240934  820.853030\n",
       "2  Afghanistan      Asia  1962   31.997  10267083  853.100710\n",
       "3  Afghanistan      Asia  1967   34.020  11537966  836.197138\n",
       "4  Afghanistan      Asia  1972   36.088  13079460  739.981106"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "2db83a60",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "country      Afghanistan\n",
      "continent           Asia\n",
      "year                1967\n",
      "lifeExp            34.02\n",
      "pop             11537966\n",
      "gdpPercap     836.197138\n",
      "Name: 3, dtype: object\n"
     ]
    }
   ],
   "source": [
    "print(df.loc[3])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee33fb4b",
   "metadata": {},
   "source": [
    "- 만약에 마지막 행의 데이터를 추출할려면 shape를 통해 크기를 알아낸 후 -1를 해주어서 구하여야 함."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "868f02d4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "country        Zimbabwe\n",
      "continent        Africa\n",
      "year               2007\n",
      "lifeExp          43.487\n",
      "pop            12311143\n",
      "gdpPercap    469.709298\n",
      "Name: 1703, dtype: object\n"
     ]
    }
   ],
   "source": [
    "last=df.shape\n",
    "print(df.loc[last[0]-1])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ebeb7bcb",
   "metadata": {},
   "source": [
    "- 여러 인덱스를 한번에 추출하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c22390ba",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         country continent  year  lifeExp       pop    gdpPercap\n",
      "0    Afghanistan      Asia  1952   28.801   8425333   779.445314\n",
      "99    Bangladesh      Asia  1967   43.453  62821884   721.186086\n",
      "999     Mongolia      Asia  1967   51.253   1149500  1226.041130\n"
     ]
    }
   ],
   "source": [
    "print(df.loc[[0,99,999]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "cee4cb0f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "country        Zimbabwe\n",
       "continent        Africa\n",
       "year               2007\n",
       "lifeExp          43.487\n",
       "pop            12311143\n",
       "gdpPercap    469.709298\n",
       "Name: 1703, dtype: object"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.iloc[-1] # iloc은 -1를 사용할 수 있다."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "744528ea",
   "metadata": {},
   "source": [
    "### 데이터 추출하기 슬라이싱 구문\n",
    "- loc과 iloc 자세한 차이점 살펴보기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "005c38b6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   year       pop\n",
      "0  1952   8425333\n",
      "1  1957   9240934\n",
      "2  1962  10267083\n",
      "3  1967  11537966\n",
      "4  1972  13079460\n"
     ]
    }
   ],
   "source": [
    "subset=df.loc[:,['year','pop']] #전체 행에 대해서 열의 2개를 선택 이때 loc은 name을 가지고 해야함\n",
    "print(subset.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "86a107a4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   year       pop   gdpPercap\n",
      "0  1952   8425333  779.445314\n",
      "1  1957   9240934  820.853030\n",
      "2  1962  10267083  853.100710\n",
      "3  1967  11537966  836.197138\n",
      "4  1972  13079460  739.981106\n"
     ]
    }
   ],
   "source": [
    "subset = df.iloc[:,[2,4,-1]] #전체 행에 대해서 열의 번호를 선택 이때 iloc은 index num을 사용\n",
    "print(subset.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "14bf214d",
   "metadata": {},
   "source": [
    "## 기초적인 통계 계산하기\n",
    "- .groupby()를 통하여 year를 그룹화 하고 .mean()을 이용해 평균을 구하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "bf1a9350",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       country continent  year  lifeExp       pop   gdpPercap\n",
      "0  Afghanistan      Asia  1952   28.801   8425333  779.445314\n",
      "1  Afghanistan      Asia  1957   30.332   9240934  820.853030\n",
      "2  Afghanistan      Asia  1962   31.997  10267083  853.100710\n",
      "3  Afghanistan      Asia  1967   34.020  11537966  836.197138\n",
      "4  Afghanistan      Asia  1972   36.088  13079460  739.981106\n",
      "5  Afghanistan      Asia  1977   38.438  14880372  786.113360\n",
      "6  Afghanistan      Asia  1982   39.854  12881816  978.011439\n",
      "7  Afghanistan      Asia  1987   40.822  13867957  852.395945\n",
      "8  Afghanistan      Asia  1992   41.674  16317921  649.341395\n",
      "9  Afghanistan      Asia  1997   41.763  22227415  635.341351\n"
     ]
    }
   ],
   "source": [
    "print(df.head(n=10))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "d5d6ddaa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<pandas.core.groupby.generic.DataFrameGroupBy object at 0x0000016D3C50A430>\n"
     ]
    }
   ],
   "source": [
    "Col_year_df=df.groupby('year')\n",
    "print(Col_year_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "19e9f8e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "year\n",
       "1952    49.057620\n",
       "1957    51.507401\n",
       "1962    53.609249\n",
       "1967    55.678290\n",
       "1972    57.647386\n",
       "1977    59.570157\n",
       "1982    61.533197\n",
       "1987    63.212613\n",
       "1992    64.160338\n",
       "1997    65.014676\n",
       "2002    65.694923\n",
       "2007    67.007423\n",
       "Name: lifeExp, dtype: float64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Col_year_df['lifeExp'].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04e318b0",
   "metadata": {},
   "source": [
    "- 여러가지 그룹을 정하고 각각의 지역별의 평균값을 구하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "11fc6c66",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                  lifeExp     gdpPercap\n",
      "year continent                         \n",
      "1952 Africa     39.135500   1252.572466\n",
      "     Americas   53.279840   4079.062552\n",
      "     Asia       46.314394   5195.484004\n",
      "     Europe     64.408500   5661.057435\n",
      "     Oceania    69.255000  10298.085650\n",
      "1957 Africa     41.266346   1385.236062\n",
      "     Americas   55.960280   4616.043733\n",
      "     Asia       49.318544   5787.732940\n",
      "     Europe     66.703067   6963.012816\n",
      "     Oceania    70.295000  11598.522455\n",
      "1962 Africa     43.319442   1598.078825\n",
      "     Americas   58.398760   4901.541870\n",
      "     Asia       51.563223   5729.369625\n",
      "     Europe     68.539233   8365.486814\n",
      "     Oceania    71.085000  12696.452430\n",
      "1967 Africa     45.334538   2050.363801\n",
      "     Americas   60.410920   5668.253496\n",
      "     Asia       54.663640   5971.173374\n",
      "     Europe     69.737600  10143.823757\n",
      "     Oceania    71.310000  14495.021790\n",
      "1972 Africa     47.450942   2339.615674\n",
      "     Americas   62.394920   6491.334139\n",
      "     Asia       57.319269   8187.468699\n",
      "     Europe     70.775033  12479.575246\n",
      "     Oceania    71.910000  16417.333380\n",
      "1977 Africa     49.580423   2585.938508\n",
      "     Americas   64.391560   7352.007126\n",
      "     Asia       59.610556   7791.314020\n",
      "     Europe     71.937767  14283.979110\n",
      "     Oceania    72.855000  17283.957605\n",
      "1982 Africa     51.592865   2481.592960\n",
      "     Americas   66.228840   7506.737088\n",
      "     Asia       62.617939   7434.135157\n",
      "     Europe     72.806400  15617.896551\n",
      "     Oceania    74.290000  18554.709840\n",
      "1987 Africa     53.344788   2282.668991\n",
      "     Americas   68.090720   7793.400261\n",
      "     Asia       64.851182   7608.226508\n",
      "     Europe     73.642167  17214.310727\n",
      "     Oceania    75.320000  20448.040160\n",
      "1992 Africa     53.629577   2281.810333\n",
      "     Americas   69.568360   8044.934406\n",
      "     Asia       66.537212   8639.690248\n",
      "     Europe     74.440100  17061.568084\n",
      "     Oceania    76.945000  20894.045885\n",
      "1997 Africa     53.598269   2378.759555\n",
      "     Americas   71.150480   8889.300863\n",
      "     Asia       68.020515   9834.093295\n",
      "     Europe     75.505167  19076.781802\n",
      "     Oceania    78.190000  24024.175170\n",
      "2002 Africa     53.325231   2599.385159\n",
      "     Americas   72.422040   9287.677107\n",
      "     Asia       69.233879  10174.090397\n",
      "     Europe     76.700600  21711.732422\n",
      "     Oceania    79.740000  26938.778040\n",
      "2007 Africa     54.806038   3089.032605\n",
      "     Americas   73.608120  11003.031625\n",
      "     Asia       70.728485  12473.026870\n",
      "     Europe     77.648600  25054.481636\n",
      "     Oceania    80.719500  29810.188275\n"
     ]
    }
   ],
   "source": [
    "multi_group_var=df.groupby(['year','continent'])[['lifeExp','gdpPercap']].mean()\n",
    "print(multi_group_var)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1cc3398f",
   "metadata": {},
   "source": [
    "- 그룹화한 데이터 개수는 nunique()를 이용해 알아낼 수 있다.\n",
    "- 다음은 continent로 그룹을 묶고 각각의 country수를 세는 방법"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "ebcd350a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "           country  year  lifeExp  pop  gdpPercap\n",
      "continent                                        \n",
      "Africa          52    12      619  624        624\n",
      "Americas        25    12      299  300        300\n",
      "Asia            33    12      393  396        396\n",
      "Europe          30    12      326  360        360\n",
      "Oceania          2    12       24   24         24\n",
      "---------------------------------------------------\n",
      "           country\n",
      "continent         \n",
      "Africa          52\n",
      "Americas        25\n",
      "Asia            33\n",
      "Europe          30\n",
      "Oceania          2\n"
     ]
    }
   ],
   "source": [
    "print(df.groupby('continent').nunique())\n",
    "print('---------------------------------------------------')\n",
    "print(df.groupby('continent')[['country']].nunique())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f0989c29",
   "metadata": {},
   "source": [
    "### 그래프 그리기\n",
    "- matplotlib의 .plot()을 이용하여 매끈한 그래프 만들기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "007c6ed4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        lifeExp\n",
      "year           \n",
      "1952  49.057620\n",
      "1957  51.507401\n",
      "1962  53.609249\n",
      "1967  55.678290\n",
      "1972  57.647386\n",
      "1977  59.570157\n",
      "1982  61.533197\n",
      "1987  63.212613\n",
      "1992  64.160338\n",
      "1997  65.014676\n",
      "2002  65.694923\n",
      "2007  67.007423\n"
     ]
    }
   ],
   "source": [
    "year_lifeExp_mean_df=df.groupby('year')[['lifeExp']].mean()\n",
    "print(year_lifeExp_mean_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "f316c4d0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='year'>"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "year_lifeExp_mean_df.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7710035",
   "metadata": {},
   "source": [
    "## Pandas 데이터프레임과 시리즈\n",
    "- series 메서드에 리스트를 전달하여 시리즈를 생성합니다. \n",
    "- 이때 series는 문자열을 리스트에 담아 전달하면 행 번호에 대해서 문자열로 인덱스를 지정할 수 있습니다.\n",
    "- series가 여러개 모여 dataframe을 생성할 수 있습니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "499eff43",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    banana\n",
      "1        42\n",
      "dtype: object\n"
     ]
    }
   ],
   "source": [
    "s=pd.Series(['banana',42])\n",
    "print(s)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "40f06527",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "fruitname    banana\n",
      "age              42\n",
      "dtype: object\n"
     ]
    }
   ],
   "source": [
    "s=pd.Series(['banana',42],index=['fruitname','age'])\n",
    "print(s)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9277b624",
   "metadata": {},
   "source": [
    "- 데이터프레임을 만들기 위해서는 dictionary를 DataFrame 클래스에 전달하여야 합니다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "1c58fbc9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       Name  Born age\n",
      "0  sangheon  1999  24\n",
      "1   cheolsu  1997  26\n"
     ]
    }
   ],
   "source": [
    "Scientists = pd.DataFrame({\n",
    "    'Name':['sangheon','cheolsu'],\n",
    "    'Born':['1999','1997'],\n",
    "    'age':['24','26']\n",
    "})\n",
    "print(Scientists)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "78c825de",
   "metadata": {},
   "source": [
    "- 데이터프레임도 index를 따로 지정하지 않으면 숫자로 입력됨, 또한 columns 인자를 지정하여 열의 순서를 입력값과 다르게 조절할 수 있습니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0ff1874a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              Occuption  age  Born  died\n",
      "sangheon  datascientist   24  1999  2100\n",
      "cheolsu       biologist   26  1997  2101\n"
     ]
    }
   ],
   "source": [
    "Scientists = pd.DataFrame(\n",
    "    data={\n",
    "        'Born':['1999','1997'],\n",
    "        'age':[24,26],\n",
    "        'died':['2100','2101'],\n",
    "        'Occuption':['datascientist','biologist']},\n",
    "    index=['sangheon','cheolsu'],\n",
    "    columns=['Occuption','age','Born','died'])\n",
    "print(Scientists)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5d99bf29",
   "metadata": {},
   "source": [
    "### 시리즈 다루기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "f2d134e2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Occuption    datascientist\n",
       "age                     24\n",
       "Born                  1999\n",
       "died                  2100\n",
       "Name: sangheon, dtype: object"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "first_row=Scientists.loc['sangheon']\n",
    "first_row"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "c6571f9c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Occuption', 'age', 'Born', 'died'], dtype='object')"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "first_row.index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "51104e37",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['datascientist', 24, '1999', '2100'], dtype=object)"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "first_row.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "6a7f67ce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Occuption', 'age', 'Born', 'died'], dtype='object')"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "first_row.keys()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "62f01f4f",
   "metadata": {},
   "source": [
    "- keys() 메서드를 이용하여 index의 첫번쨰 값을 추출할 수 있다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "c1f93317",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Occuption'"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "first_row.keys()[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e1ff143",
   "metadata": {},
   "source": [
    "### 시리즈의 기초 통계 메서드 사용하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "2d11a919",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sangheon    24\n",
      "cheolsu     26\n",
      "Name: age, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "ages=Scientists['age']\n",
    "print(ages)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "844e7fa2",
   "metadata": {},
   "source": [
    "- mean(): 평균\n",
    "- min() , max(), std()를 이용하여 최소 최대 분산을 쓸 수 있다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "f2acdb33",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "25.0\n",
      "24\n",
      "1.4142135623730951\n"
     ]
    }
   ],
   "source": [
    "print(ages.mean())\n",
    "print(ages.min())\n",
    "print(ages.std())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a428297",
   "metadata": {},
   "source": [
    "### 대표적인 메서드 정리\n",
    "- append: 2개 이상의 시리즈 연결\n",
    "- describe: 요약 통계량 계산\n",
    "- drop_duplicates: 중복값이 없는 시리즈 변환\n",
    "- equals: 시리즈에 해당 값을 가진 요소가 있는지 확인\n",
    "- get_values: 시리즈 값 구하기(values 속성과 동일)\n",
    "- isin: 시리즈에 포함된 값이 있는지 확인\n",
    "- median: 중간값 변환\n",
    "- replace: 특정값을 가진 시리즈 값을 교체\n",
    "- sample: 시리즈에서 임의의 값을 반환\n",
    "- sort_values: 값을 정렬\n",
    "- to_frame: 시리즈를 데이터프레임으로 변환"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e55b2730",
   "metadata": {},
   "source": [
    "## 시리즈 다루기 응용"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "90ecf2e7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   Name        Born        Died  Age          Occupation\n",
      "0     Rosaline Franklin  1920-07-25  1958-04-16   37             Chemist\n",
      "1        William Gosset  1876-06-13  1937-10-16   61        Statistician\n",
      "2  Florence Nightingale  1820-05-12  1910-08-13   90               Nurse\n",
      "3           Marie Curie  1867-11-07  1934-07-04   66             Chemist\n",
      "4         Rachel Carson  1907-05-27  1964-04-14   56           Biologist\n",
      "5             John Snow  1813-03-15  1858-06-16   45           Physician\n",
      "6           Alan Turing  1912-06-23  1954-06-07   41  Computer Scientist\n",
      "7          Johann Gauss  1777-04-30  1855-02-23   77       Mathematician\n",
      "Name\n",
      "Rosaline Franklin       0\n",
      "William Gosset          1\n",
      "Florence Nightingale    2\n",
      "Marie Curie             3\n",
      "Rachel Carson           4\n",
      "John Snow               5\n",
      "Alan Turing             6\n",
      "Johann Gauss            7\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "scientists=pd.read_csv('..\\doit_pandas-master\\data\\scientists.csv')\n",
    "print(scientists)\n",
    "indices=pd.Series(scientists.index,index=scientists['Name'])\n",
    "print(indices)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "395e45a8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "90\n"
     ]
    }
   ],
   "source": [
    "ages=scientists['Age']\n",
    "print(ages.max())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d284e88d",
   "metadata": {},
   "source": [
    "- 조건을 주어 만족하는 값만 출력가능"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "d828d5a6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1    61\n",
      "2    90\n",
      "3    66\n",
      "7    77\n",
      "Name: Age, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(ages[ages>ages.mean()])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "863f3798",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    False\n",
      "1     True\n",
      "2     True\n",
      "3     True\n",
      "4    False\n",
      "5    False\n",
      "6    False\n",
      "7     True\n",
      "Name: Age, dtype: bool\n"
     ]
    }
   ],
   "source": [
    "print(ages>ages.mean())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d3cf6287",
   "metadata": {},
   "source": [
    "- 시리즈는 벡터입니다! 그리고 안의 값은 스칼라입니다!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "2d8c6862",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0     74\n",
      "1    122\n",
      "2    180\n",
      "3    132\n",
      "4    112\n",
      "5     90\n",
      "6     82\n",
      "7    154\n",
      "Name: Age, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(ages+ages)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "6de9208c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0      0\n",
      "1    100\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(pd.Series([0,100]))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "504ab68d",
   "metadata": {},
   "source": [
    "- Seireis와 ages의 핪을 구할때 나머지 인덱스는 구할수 없기때문에 누락값으로 표시"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "2a3c987b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0     37.0\n",
      "1    161.0\n",
      "2      NaN\n",
      "3      NaN\n",
      "4      NaN\n",
      "5      NaN\n",
      "6      NaN\n",
      "7      NaN\n",
      "dtype: float64\n"
     ]
    }
   ],
   "source": [
    "print(ages+pd.Series([0,100]))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba4e787f",
   "metadata": {},
   "source": [
    "- sort_index()를 활용하여 index기준으로 정리하는데 ascending 인자를 False로 전달하면 거꾸로 정렬 가능"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "dda4a61b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    37\n",
      "1    61\n",
      "2    90\n",
      "3    66\n",
      "4    56\n",
      "5    45\n",
      "6    41\n",
      "7    77\n",
      "Name: Age, dtype: int64\n",
      "7    77\n",
      "6    41\n",
      "5    45\n",
      "4    56\n",
      "3    66\n",
      "2    90\n",
      "1    61\n",
      "0    37\n",
      "Name: Age, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "rev_ages=ages.sort_index(ascending=False)\n",
    "print(ages)\n",
    "print(rev_ages)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "86d5d9ab",
   "metadata": {},
   "source": [
    "## 시리즈와 데이터프레임의 데이터 처리하기\n",
    "- 열의 자료형 바꾸기와 새로운 열 추가하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "ee3dc04d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   Name        Born        Died  Age    Occupation\n",
      "0     Rosaline Franklin  1920-07-25  1958-04-16   37       Chemist\n",
      "1        William Gosset  1876-06-13  1937-10-16   61  Statistician\n",
      "2  Florence Nightingale  1820-05-12  1910-08-13   90         Nurse\n",
      "3           Marie Curie  1867-11-07  1934-07-04   66       Chemist\n",
      "4         Rachel Carson  1907-05-27  1964-04-14   56     Biologist\n",
      "object\n"
     ]
    }
   ],
   "source": [
    "print(scientists.head())\n",
    "print(scientists['Born'].dtype)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ccb4106b",
   "metadata": {},
   "source": [
    "- scientists의 Born 행의 데이터의 형태는 object로 되어있기 때문에 문자열이다. 그렇기 떄문에 datetime으로 바꾸어준다.\n",
    "-pd.to_datetime()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "61ab63fb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0   1920-07-25\n",
      "1   1876-06-13\n",
      "2   1820-05-12\n",
      "3   1867-11-07\n",
      "4   1907-05-27\n",
      "5   1813-03-15\n",
      "6   1912-06-23\n",
      "7   1777-04-30\n",
      "Name: Born, dtype: datetime64[ns]\n",
      "0   1958-04-16\n",
      "1   1937-10-16\n",
      "2   1910-08-13\n",
      "3   1934-07-04\n",
      "4   1964-04-14\n",
      "5   1858-06-16\n",
      "6   1954-06-07\n",
      "7   1855-02-23\n",
      "Name: Died, dtype: datetime64[ns]\n"
     ]
    }
   ],
   "source": [
    "born_datetime=pd.to_datetime(scientists['Born'],format='%Y-%m-%d')\n",
    "print(born_datetime)\n",
    "died_datetime=pd.to_datetime(scientists['Died'],format='%Y-%m-%d')\n",
    "print(died_datetime)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca9de35d",
   "metadata": {},
   "source": [
    "- 계산할 수 있게 형식을 바꾸어주었기 때문에 이를 다시 sciencetists columns에 넣어준다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "3379dbcb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   Name        Born        Died  Age    Occupation    born_dt  \\\n",
      "0     Rosaline Franklin  1920-07-25  1958-04-16   37       Chemist 1920-07-25   \n",
      "1        William Gosset  1876-06-13  1937-10-16   61  Statistician 1876-06-13   \n",
      "2  Florence Nightingale  1820-05-12  1910-08-13   90         Nurse 1820-05-12   \n",
      "3           Marie Curie  1867-11-07  1934-07-04   66       Chemist 1867-11-07   \n",
      "4         Rachel Carson  1907-05-27  1964-04-14   56     Biologist 1907-05-27   \n",
      "\n",
      "     died_dt age_day_dt  \n",
      "0 1958-04-16 13779 days  \n",
      "1 1937-10-16 22404 days  \n",
      "2 1910-08-13 32964 days  \n",
      "3 1934-07-04 24345 days  \n",
      "4 1964-04-14 20777 days  \n"
     ]
    }
   ],
   "source": [
    "scientists['born_dt'],scientists['died_dt']=(born_datetime,died_datetime)\n",
    "scientists['age_day_dt']=scientists['died_dt']-scientists['born_dt']\n",
    "print(scientists.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c1795e54",
   "metadata": {},
   "source": [
    "- 시리즈. 데이터프레임의 데이터 섞기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "2e3c87fb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    37\n",
      "1    61\n",
      "2    90\n",
      "3    66\n",
      "4    56\n",
      "5    45\n",
      "6    41\n",
      "7    77\n",
      "Name: Age, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(scientists['Age'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "d62125c5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    66\n",
      "1    56\n",
      "2    41\n",
      "3    77\n",
      "4    90\n",
      "5    45\n",
      "6    37\n",
      "7    61\n",
      "Name: Age, dtype: int64\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\re2te\\anaconda3\\envs\\re2ter\\lib\\random.py:362: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  x[i], x[j] = x[j], x[i]\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "\n",
    "random.seed(42)\n",
    "random.shuffle(scientists['Age'])\n",
    "print(scientists['Age'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8eea696a",
   "metadata": {},
   "source": [
    "### 데이터프레임의 열 삭제하기\n",
    "- drop()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "142bc3d9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   Name        Born        Died  Age          Occupation  \\\n",
      "0     Rosaline Franklin  1920-07-25  1958-04-16   66             Chemist   \n",
      "1        William Gosset  1876-06-13  1937-10-16   56        Statistician   \n",
      "2  Florence Nightingale  1820-05-12  1910-08-13   41               Nurse   \n",
      "3           Marie Curie  1867-11-07  1934-07-04   77             Chemist   \n",
      "4         Rachel Carson  1907-05-27  1964-04-14   90           Biologist   \n",
      "5             John Snow  1813-03-15  1858-06-16   45           Physician   \n",
      "6           Alan Turing  1912-06-23  1954-06-07   37  Computer Scientist   \n",
      "7          Johann Gauss  1777-04-30  1855-02-23   61       Mathematician   \n",
      "\n",
      "     born_dt    died_dt age_day_dt  \n",
      "0 1920-07-25 1958-04-16 13779 days  \n",
      "1 1876-06-13 1937-10-16 22404 days  \n",
      "2 1820-05-12 1910-08-13 32964 days  \n",
      "3 1867-11-07 1934-07-04 24345 days  \n",
      "4 1907-05-27 1964-04-14 20777 days  \n",
      "5 1813-03-15 1858-06-16 16529 days  \n",
      "6 1912-06-23 1954-06-07 15324 days  \n",
      "7 1777-04-30 1855-02-23 28422 days  \n"
     ]
    }
   ],
   "source": [
    "print(scientists)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "bd0a298d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Born</th>\n",
       "      <th>Died</th>\n",
       "      <th>Occupation</th>\n",
       "      <th>born_dt</th>\n",
       "      <th>died_dt</th>\n",
       "      <th>age_day_dt</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Rosaline Franklin</td>\n",
       "      <td>1920-07-25</td>\n",
       "      <td>1958-04-16</td>\n",
       "      <td>Chemist</td>\n",
       "      <td>1920-07-25</td>\n",
       "      <td>1958-04-16</td>\n",
       "      <td>13779 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>William Gosset</td>\n",
       "      <td>1876-06-13</td>\n",
       "      <td>1937-10-16</td>\n",
       "      <td>Statistician</td>\n",
       "      <td>1876-06-13</td>\n",
       "      <td>1937-10-16</td>\n",
       "      <td>22404 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Florence Nightingale</td>\n",
       "      <td>1820-05-12</td>\n",
       "      <td>1910-08-13</td>\n",
       "      <td>Nurse</td>\n",
       "      <td>1820-05-12</td>\n",
       "      <td>1910-08-13</td>\n",
       "      <td>32964 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Marie Curie</td>\n",
       "      <td>1867-11-07</td>\n",
       "      <td>1934-07-04</td>\n",
       "      <td>Chemist</td>\n",
       "      <td>1867-11-07</td>\n",
       "      <td>1934-07-04</td>\n",
       "      <td>24345 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Rachel Carson</td>\n",
       "      <td>1907-05-27</td>\n",
       "      <td>1964-04-14</td>\n",
       "      <td>Biologist</td>\n",
       "      <td>1907-05-27</td>\n",
       "      <td>1964-04-14</td>\n",
       "      <td>20777 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>John Snow</td>\n",
       "      <td>1813-03-15</td>\n",
       "      <td>1858-06-16</td>\n",
       "      <td>Physician</td>\n",
       "      <td>1813-03-15</td>\n",
       "      <td>1858-06-16</td>\n",
       "      <td>16529 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Alan Turing</td>\n",
       "      <td>1912-06-23</td>\n",
       "      <td>1954-06-07</td>\n",
       "      <td>Computer Scientist</td>\n",
       "      <td>1912-06-23</td>\n",
       "      <td>1954-06-07</td>\n",
       "      <td>15324 days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Johann Gauss</td>\n",
       "      <td>1777-04-30</td>\n",
       "      <td>1855-02-23</td>\n",
       "      <td>Mathematician</td>\n",
       "      <td>1777-04-30</td>\n",
       "      <td>1855-02-23</td>\n",
       "      <td>28422 days</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   Name        Born        Died          Occupation  \\\n",
       "0     Rosaline Franklin  1920-07-25  1958-04-16             Chemist   \n",
       "1        William Gosset  1876-06-13  1937-10-16        Statistician   \n",
       "2  Florence Nightingale  1820-05-12  1910-08-13               Nurse   \n",
       "3           Marie Curie  1867-11-07  1934-07-04             Chemist   \n",
       "4         Rachel Carson  1907-05-27  1964-04-14           Biologist   \n",
       "5             John Snow  1813-03-15  1858-06-16           Physician   \n",
       "6           Alan Turing  1912-06-23  1954-06-07  Computer Scientist   \n",
       "7          Johann Gauss  1777-04-30  1855-02-23       Mathematician   \n",
       "\n",
       "     born_dt    died_dt age_day_dt  \n",
       "0 1920-07-25 1958-04-16 13779 days  \n",
       "1 1876-06-13 1937-10-16 22404 days  \n",
       "2 1820-05-12 1910-08-13 32964 days  \n",
       "3 1867-11-07 1934-07-04 24345 days  \n",
       "4 1907-05-27 1964-04-14 20777 days  \n",
       "5 1813-03-15 1858-06-16 16529 days  \n",
       "6 1912-06-23 1954-06-07 15324 days  \n",
       "7 1777-04-30 1855-02-23 28422 days  "
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "drop_age_sceintist=scientists.drop(['Age'],axis=1) # in_place 형식이 아님\n",
    "drop_age_sceintist"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a245a89d",
   "metadata": {},
   "source": [
    "## 데이터 저장하고 불러오기\n",
    "- csv파일은 파일을 ,로 구분하여 저장한 파일이며 TSV파일은 \\t으로 구분하여 파일을 저장합니다.\n",
    "- .to_csv(저장장소.csv) ,로 구분\n",
    "- .to_csv(저장장소.tsv, sep='\\t') tab으로 구분"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "efcf0cff",
   "metadata": {},
   "outputs": [],
   "source": [
    "# drop_age_scientist.to_csv(주소)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e6793df5",
   "metadata": {},
   "source": [
    "## 그래프 그리기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "42d173fd",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\re2te\\anaconda3\\envs\\re2ter\\lib\\site-packages\\scipy\\__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.23.1\n",
      "  warnings.warn(f\"A NumPy version >={np_minversion} and <{np_maxversion}\"\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  dataset     x     y\n",
      "0       I  10.0  8.04\n",
      "1       I   8.0  6.95\n",
      "2       I  13.0  7.58\n",
      "3       I   9.0  8.81\n",
      "4       I  11.0  8.33\n",
      "<class 'pandas.core.frame.DataFrame'>\n"
     ]
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "anscombe = sns.load_dataset('anscombe')\n",
    "print(anscombe.head())\n",
    "print(type(anscombe))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "455b68b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset_1=anscombe[anscombe['dataset']=='I']\n",
    "dataset_2=anscombe[anscombe['dataset']=='II']\n",
    "dataset_3=anscombe[anscombe['dataset']=='III']\n",
    "dataset_4=anscombe[anscombe['dataset']=='IV']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bece7830",
   "metadata": {},
   "source": [
    "- plt.plot(x,y): 그래프를 그려줌 이떄 'o'를 넣어주면 점으로 나타냄"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "d31f1e3c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x2ea8cfb8640>]"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(dataset_1['x'],dataset_1['y'],'o')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51e23a8b",
   "metadata": {},
   "source": [
    "- plt.figure(): 창을 띄움\n",
    "- .add_subplot( , , ): subplot을 위한 작은 칸 설정"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "1a9faf10",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig=plt.figure()\n",
    "axes1=fig.add_subplot(2,2,1)\n",
    "axes2=fig.add_subplot(2,2,2)\n",
    "axes3=fig.add_subplot(2,2,3)\n",
    "axes4=fig.add_subplot(2,2,4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "cf0bbd92",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "axes1.plot(dataset_1['x'],dataset_1['y'],'o')\n",
    "axes2.plot(dataset_2['x'],dataset_2['y'],'o')\n",
    "axes3.plot(dataset_3['x'],dataset_3['y'],'o')\n",
    "axes4.plot(dataset_4['x'],dataset_4['y'],'o')\n",
    "fig"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "135aa65b",
   "metadata": {},
   "source": [
    "- .set_title(): 타이틀 설정\n",
    "- .suptitle(): 큰 타이틀 생성\n",
    "- .tight_layout(): 레이아웃 조절"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "b57a5e01",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "axes1.set_title('dataset1')\n",
    "axes2.set_title('dataset2')\n",
    "axes3.set_title('dataset3')\n",
    "axes4.set_title('dataset4')\n",
    "\n",
    "fig.suptitle('Ancombe Data')\n",
    "fig.tight_layout()\n",
    "fig"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2c9665cd",
   "metadata": {},
   "source": [
    "## matplotlib 라이브러리 자유자재로 사용하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "5a6982f5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   total_bill   tip     sex smoker  day    time  size\n",
      "0       16.99  1.01  Female     No  Sun  Dinner     2\n",
      "1       10.34  1.66    Male     No  Sun  Dinner     3\n",
      "2       21.01  3.50    Male     No  Sun  Dinner     3\n",
      "3       23.68  3.31    Male     No  Sun  Dinner     2\n",
      "4       24.59  3.61  Female     No  Sun  Dinner     4\n",
      "<class 'pandas.core.frame.DataFrame'>\n"
     ]
    }
   ],
   "source": [
    "tips=sns.load_dataset(\"tips\")\n",
    "print(tips.head())\n",
    "print(type(tips))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7a01361c",
   "metadata": {},
   "source": [
    "### HIstogram 만들기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "32150523",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig=plt.figure()\n",
    "axes1=fig.add_subplot(1,1,1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "410ad29d",
   "metadata": {},
   "source": [
    "- .hist(): 히스토그램으로 만들어줌 이떄 bins를 설정하면 x의 간격을 맞추어 줄 수 있다.\n",
    "- .set_x{y}label: x{y}의 labeling을 해줌\n",
    "- 변수가 한개이며 frequecy가 x축을 담당하고 y축이 데이터값이다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "11c488cd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "axes1.hist(tips['total_bill'], bins=10)\n",
    "axes1.set_title('Histogram of Total Bill')\n",
    "axes1.set_xlabel('Frequency')\n",
    "axes1.set_ylabel('Total Bill')\n",
    "fig\n",
    "# "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cd7f5814",
   "metadata": {},
   "source": [
    "### 산점도 그래프 만들기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "c90d1ddd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'tips')"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "scatter_plot=plt.figure()\n",
    "axes1=scatter_plot.add_subplot(1,1,1)\n",
    "axes1.scatter(tips['total_bill'],tips['tip'])\n",
    "axes1.set_title('Scatterplot of Total BIll vs Tips')\n",
    "axes1.set_xlabel('total_bill')\n",
    "axes1.set_ylabel('tips')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "084e17eb",
   "metadata": {},
   "source": [
    "### 박스 그래프 만들기\n",
    "- 박스 그래프는 이산형 변수와 연속형 변수를 함께 사용하는 그래프입니다. \n",
    "- 연속형 변수가 y, 이산형 변수가 x를 구성합니다\n",
    "- 빨간색 선은 median을 뜻하며 mean은 +로 표시합니다 해당은 최솟값과 최댓값을 표시할 수 있으며 o는 outlier로 이상치입니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "76fa9c28",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Boxplot of Tips by Sex')"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "boxplot=plt.figure()\n",
    "axes1=boxplot.add_subplot(1,1,1)\n",
    "axes1.boxplot([tips[tips['sex']=='Female']['tip'],\n",
    "              tips[tips['sex']=='Male']['tip']],\n",
    "             labels=['Female','Male'])\n",
    "\n",
    "axes1.set_xlabel('Sex')\n",
    "axes1.set_ylabel('Tip')\n",
    "axes1.set_title('Boxplot of Tips by Sex')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "512c9f81",
   "metadata": {},
   "source": [
    "### 다변량 그래프 만들기(산점도 그래프)\n",
    "- 산점도 그래프\n",
    "- .apply()로 조건에 대한 값을 추가\n",
    "- s는 점의 사이즈를 c는 점의 color를 의미합니다\n",
    "- alpha=0.5로 하여 투명ㅇ도를 조절하는 것입니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "7be07d16",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     total_bill   tip     sex smoker   day    time  size sex_color\n",
      "0         16.99  1.01  Female     No   Sun  Dinner     2         0\n",
      "1         10.34  1.66    Male     No   Sun  Dinner     3         1\n",
      "2         21.01  3.50    Male     No   Sun  Dinner     3         1\n",
      "3         23.68  3.31    Male     No   Sun  Dinner     2         1\n",
      "4         24.59  3.61  Female     No   Sun  Dinner     4         0\n",
      "..          ...   ...     ...    ...   ...     ...   ...       ...\n",
      "239       29.03  5.92    Male     No   Sat  Dinner     3         1\n",
      "240       27.18  2.00  Female    Yes   Sat  Dinner     2         0\n",
      "241       22.67  2.00    Male    Yes   Sat  Dinner     2         1\n",
      "242       17.82  1.75    Male     No   Sat  Dinner     2         1\n",
      "243       18.78  3.00  Female     No  Thur  Dinner     2         0\n",
      "\n",
      "[244 rows x 8 columns]\n"
     ]
    }
   ],
   "source": [
    "def recode_sex(sex):\n",
    "    if sex =='Female':\n",
    "        return 0\n",
    "    else:\n",
    "        return 1\n",
    "tips['sex_color']=tips['sex'].apply(recode_sex)\n",
    "print(tips)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "1789edbe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Tip')"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "scatter_plot=plt.figure()\n",
    "axes1=scatter_plot.add_subplot(1,1,1)\n",
    "axes1.scatter(\n",
    "    x=tips['total_bill'],\n",
    "    y=tips['tip'],\n",
    "    s=tips['size']*10,\n",
    "    c=tips['sex_color'],\n",
    "    alpha=0.5)\n",
    "axes1.set_title(\"Total Bill vs Tip colored by sex and sized by size\")\n",
    "axes1.set_xlabel('Total Bill')\n",
    "axes1.set_ylabel('Tip')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a80219cd",
   "metadata": {},
   "source": [
    "## seaborn 라이브러리 사용하기\n",
    "- 단변량 그래프 그리기(히스토그램)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "567c5fc8",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\re2te\\anaconda3\\envs\\re2ter\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Total Bill Histogram with Density Plot')"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "tips=sns.load_dataset('tips')\n",
    "ax=plt.subplots()\n",
    "ax=sns.distplot(tips['total_bill'])\n",
    "ax.set_title('Total Bill Histogram with Density Plot')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "309c513e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\re2te\\anaconda3\\envs\\re2ter\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Total Bill Histogram with Density Plot')"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "tips=sns.load_dataset('tips')\n",
    "ax=plt.subplots()\n",
    "ax=sns.distplot(tips['total_bill'],kde=False) #kde=False라고 두면 히스토그램만 나옴\n",
    "ax.set_title('Total Bill Histogram with Density Plot')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "e5ecc38f",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\re2te\\anaconda3\\envs\\re2ter\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `kdeplot` (an axes-level function for kernel density plots).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Total Bill Histogram with Density Plot')"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "tips=sns.load_dataset('tips')\n",
    "ax=plt.subplots()\n",
    "ax=sns.distplot(tips['total_bill'],hist=False)#hist=False라고 두면 그래프만 나옴\n",
    "ax.set_title('Total Bill Histogram with Density Plot')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "7bf2c8fd",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\re2te\\anaconda3\\envs\\re2ter\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n",
      "C:\\Users\\re2te\\anaconda3\\envs\\re2ter\\lib\\site-packages\\seaborn\\distributions.py:2103: FutureWarning: The `axis` variable is no longer used and will be removed. Instead, assign variables directly to `x` or `y`.\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Total Bill Histogram with Density Plot')"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "tips=sns.load_dataset('tips')\n",
    "ax=plt.subplots()\n",
    "ax=sns.distplot(tips['total_bill'],rug=True) #rug=True를 나타냄으로써 밀집도를 나타냅니다.\n",
    "ax.set_title('Total Bill Histogram with Density Plot')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea492932",
   "metadata": {},
   "source": [
    "### Count 그래프 만들기(seaborn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "7a621ef8",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\re2te\\anaconda3\\envs\\re2ter\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Frequency')"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax=plt.subplot()\n",
    "ax=sns.countplot('day',data=tips)\n",
    "ax.set_title('Count of Days')\n",
    "ax.set_xlabel('Day of the Week')\n",
    "ax.set_ylabel('Frequency')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f0d1d16",
   "metadata": {},
   "source": [
    "### 이변량 그래프 그리기(seaborn)\n",
    "- regplot(): 회귀선을 나타내어주는 plot을 그림"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "eae3289e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax=plt.plot()\n",
    "ax=sns.regplot(x='total_bill',y='tip',data=tips) # fit_reg=False를 주면 회귀선을 없앨 수 있다."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d0a2a4fb",
   "metadata": {},
   "source": [
    "- jointplot(): 산점도 그래프와 히스토그램을 한 번에 그려준다\n",
    "- 산점도 그래프는 점이 겹쳐 보일 경우 점을 구분하기 어렵다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "bcec253a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.03, 'Joint plot of total bill and tip')"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "joint=sns.jointplot(x='total_bill',y='tip',data=tips)\n",
    "joint.set_axis_labels(xlabel='Total BIll',ylabel='Tip')\n",
    "joint.fig.suptitle('Joint plot of total bill and tip', fontsize=10, y=1.03)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ac1100df",
   "metadata": {},
   "source": [
    "- 산점도 그래프의 단점을 없애주는 육각 그래프(hexbin)을 사용 *kind인자를 hex로 준다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "edf7a5fa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.03, 'Joint plot of total bill and tip')"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "hexbin=sns.jointplot(x='total_bill',y='tip',data=tips,kind=\"hex\")\n",
    "hexbin.set_axis_labels(xlabel='Total BIll',ylabel='Tip')\n",
    "hexbin.fig.suptitle('Joint plot of total bill and tip', fontsize=10, y=1.03)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ec754d4e",
   "metadata": {},
   "source": [
    "- 이차원 밀집도 그리기\n",
    "- kdeplot(): shade를 True로 주면 그래프에 음영효과를 줄 수 있다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "349069fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax=plt.subplot()\n",
    "ax=sns.kdeplot(x='total_bill',y='tip',data=tips,shade=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7a8295d5",
   "metadata": {},
   "source": [
    "- 바 그래프 그리기\n",
    "- barplot(): 바 그래프를 그린다. 지정한 변수의 평균을 표시할 수 있다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "032cdf3f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Aberage total bill')"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax=plt.plot()\n",
    "ax=sns.barplot(x='time',y='total_bill',data=tips)\n",
    "ax.set_title('bar plot of average total bill for time of day')\n",
    "ax.set_xlabel('Time of day')\n",
    "ax.set_ylabel('Aberage total bill')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f4994db9",
   "metadata": {},
   "source": [
    "- 박스 그래프 그리기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "68ed958d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Aberage total bill')"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax=plt.plot()\n",
    "ax=sns.boxplot(x='time',y='total_bill',data=tips)\n",
    "ax.set_title('bar plot of average total bill for time of day')\n",
    "ax.set_xlabel('Time of day')\n",
    "ax.set_ylabel('Aberage total bill')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c8a1fbb",
   "metadata": {},
   "source": [
    "- 박스 그래프는 데이터 분산이 모호하게 표현되기 때문에 커널 밀도를 추정한 바이올린 그래프를 사용합니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "376d85d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Aberage total bill')"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax=plt.plot()\n",
    "ax=sns.violinplot(x='time',y='total_bill',data=tips)\n",
    "ax.set_title('bar plot of average total bill for time of day')\n",
    "ax.set_xlabel('Time of day')\n",
    "ax.set_ylabel('Aberage total bill')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4432240b",
   "metadata": {},
   "source": [
    "- 관계 그래프 그리기\n",
    "- 지금까지 설명한 그래프를 종합한 그래프가 나타난다\n",
    "- pairplot()에 데이터 프레임을 넣는 방법으로 간단하게 표현됨\n",
    "- map_upper(),map_lower(),map_diag(): 대각선 기준 위쪽, 아래쪽, 대각선을 각각 어떤 기준으로 삼을건지 결정할 수 있음"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "f27e9eb4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 540x540 with 12 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig=sns.pairplot(tips)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "48919ee6",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\re2te\\anaconda3\\envs\\re2ter\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n",
      "C:\\Users\\re2te\\anaconda3\\envs\\re2ter\\lib\\site-packages\\seaborn\\distributions.py:2103: FutureWarning: The `axis` variable is no longer used and will be removed. Instead, assign variables directly to `x` or `y`.\n",
      "  warnings.warn(msg, FutureWarning)\n",
      "C:\\Users\\re2te\\anaconda3\\envs\\re2ter\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n",
      "C:\\Users\\re2te\\anaconda3\\envs\\re2ter\\lib\\site-packages\\seaborn\\distributions.py:2103: FutureWarning: The `axis` variable is no longer used and will be removed. Instead, assign variables directly to `x` or `y`.\n",
      "  warnings.warn(msg, FutureWarning)\n",
      "C:\\Users\\re2te\\anaconda3\\envs\\re2ter\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n",
      "C:\\Users\\re2te\\anaconda3\\envs\\re2ter\\lib\\site-packages\\seaborn\\distributions.py:2103: FutureWarning: The `axis` variable is no longer used and will be removed. Instead, assign variables directly to `x` or `y`.\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 540x540 with 12 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pair_grid=sns.PairGrid(tips)\n",
    "pair_grid=pair_grid.map_upper(sns.regplot)\n",
    "pair_grid=pair_grid.map_lower(sns.kdeplot)# kernel density 커널 밀도 추청\n",
    "pair_grid=pair_grid.map_diag(sns.distplot,rug=True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83f54a92",
   "metadata": {},
   "source": [
    "- 다변량 그래프\n",
    "- seaborn 바이올린 산점도 관계 그래프에 색상 추가\n",
    "- hue에 색상에 필요한 열 이름을 추가하면 된다. 산점도도 같음"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "b9b52fa0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax=plt.subplots()\n",
    "ax=sns.violinplot(x='time',y='total_bill',hue='sex',data=tips,split=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "80f3f281",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432.125x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "scatter=sns.lmplot(x='total_bill',y='tip',data=tips,hue='sex',fit_reg=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "dd443d9e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 612.125x540 with 12 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig=sns.pairplot(tips,hue='sex')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f96da9aa",
   "metadata": {},
   "source": [
    "## 데이터 연결하기\n",
    "### 분석하기 좋은 깔끔한 데이터의 조건 \n",
    "- 데이터 분석 목적에 맞는 데이터를 모아 새로운 표(Table)를 만들어야 합니다,\n",
    "- 측정한 값은 행(row)에 구성해야 합니다\n",
    "- 변수는 열(column)로 구성해야 합니다."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "64be790d",
   "metadata": {},
   "source": [
    "- concat(): 데이터프레임을 연결할 떄 위에서 아래 방향으로 연결합니다. 또한 예시는 열의 이름이 같기 때문에 그래로 유지됩니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "422e1dd7",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "df1=pd.read_csv('C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data/concat_1.csv')\n",
    "df2=pd.read_csv('C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data/concat_2.csv')\n",
    "df3=pd.read_csv('C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data/concat_3.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "9ffc0a39",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    A   B   C   D\n",
      "0  a0  b0  c0  d0\n",
      "1  a1  b1  c1  d1\n",
      "2  a2  b2  c2  d2\n",
      "3  a3  b3  c3  d3\n",
      "    A   B   C   D\n",
      "0  a4  b4  c4  d4\n",
      "1  a5  b5  c5  d5\n",
      "2  a6  b6  c6  d6\n",
      "3  a7  b7  c7  d7\n",
      "     A    B    C    D\n",
      "0   a8   b8   c8   d8\n",
      "1   a9   b9   c9   d9\n",
      "2  a10  b10  c10  d10\n",
      "3  a11  b11  c11  d11\n",
      "     A    B    C    D\n",
      "0   a0   b0   c0   d0\n",
      "1   a1   b1   c1   d1\n",
      "2   a2   b2   c2   d2\n",
      "3   a3   b3   c3   d3\n",
      "0   a4   b4   c4   d4\n",
      "1   a5   b5   c5   d5\n",
      "2   a6   b6   c6   d6\n",
      "3   a7   b7   c7   d7\n",
      "0   a8   b8   c8   d8\n",
      "1   a9   b9   c9   d9\n",
      "2  a10  b10  c10  d10\n",
      "3  a11  b11  c11  d11\n"
     ]
    }
   ],
   "source": [
    "print(df1)\n",
    "print(df2)\n",
    "print(df3)\n",
    "row_concat=pd.concat([df1,df2,df3])\n",
    "print(row_concat)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b8fa7643",
   "metadata": {},
   "source": [
    "- 데이터프레임에 시리즈 연결하기\n",
    "- 새로운 열을 하나 추가시켜서 연결하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "7f731e95",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    n1\n",
      "1    n2\n",
      "2    n3\n",
      "3    n4\n",
      "dtype: object\n"
     ]
    }
   ],
   "source": [
    "new_row_series=pd.Series(['n1','n2','n3','n4'])\n",
    "print(new_row_series)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "5e11cd86",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     A    B    C    D    0\n",
      "0   a0   b0   c0   d0  NaN\n",
      "1   a1   b1   c1   d1  NaN\n",
      "2   a2   b2   c2   d2  NaN\n",
      "3   a3   b3   c3   d3  NaN\n",
      "0  NaN  NaN  NaN  NaN   n1\n",
      "1  NaN  NaN  NaN  NaN   n2\n",
      "2  NaN  NaN  NaN  NaN   n3\n",
      "3  NaN  NaN  NaN  NaN   n4\n"
     ]
    }
   ],
   "source": [
    "print(pd.concat([df1,new_row_series]))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ff13fe3",
   "metadata": {},
   "source": [
    "- 데이터프레임에 시리즈를 연결하면 열이름이 없기 때문에 제대로 되지 않는다!\n",
    "- 그렇기 때문에 데이터프레임으로 만들어 주어야한다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "753a3e51",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    A   B   C   D\n",
      "0  n1  n2  n3  n4\n"
     ]
    }
   ],
   "source": [
    "new_row_df=pd.DataFrame([['n1','n2','n3','n4']],columns=['A','B','C','D']) #[ [ ] ]인 이유는 row 하나에 데이터가 나열되기 때문\n",
    "print(new_row_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "75f2583a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    A   B   C   D\n",
      "0  a0  b0  c0  d0\n",
      "1  a1  b1  c1  d1\n",
      "2  a2  b2  c2  d2\n",
      "3  a3  b3  c3  d3\n",
      "0  n1  n2  n3  n4\n"
     ]
    }
   ],
   "source": [
    "print(pd.concat([df1,new_row_df]))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40cfb968",
   "metadata": {},
   "source": [
    "-concat 메서드는 한 번에 2개 이상의 데이터프레임을 연결할 수 있다. 데이터프레임이 1개라면 append메서드를 사용해도 됩니다!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "b00edb82",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    A   B   C   D\n",
      "0  a0  b0  c0  d0\n",
      "1  a1  b1  c1  d1\n",
      "2  a2  b2  c2  d2\n",
      "3  a3  b3  c3  d3\n",
      "0  n1  n2  n3  n4\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\re2te\\AppData\\Local\\Temp\\ipykernel_8244\\3141778766.py:1: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  print(df1.append(new_row_df))\n"
     ]
    }
   ],
   "source": [
    "print(df1.append(new_row_df))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e104c5d",
   "metadata": {},
   "source": [
    "- append()와 딕셔너리를 이용하면 간편하게 행을 연결할 수 있습니다\n",
    "- 이때 ignore_index를 True로 설정하면 데이터프레임의 인덱스를 0부터 다시 지정합니다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "a822a315",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    A   B   C   D\n",
      "0  a0  b0  c0  d0\n",
      "1  a1  b1  c1  d1\n",
      "2  a2  b2  c2  d2\n",
      "3  a3  b3  c3  d3\n",
      "4  n1  n2  n3  n4\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\re2te\\AppData\\Local\\Temp\\ipykernel_8244\\1895622949.py:2: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  print(df1.append(data_dict,ignore_index=True))\n"
     ]
    }
   ],
   "source": [
    "data_dict={'A':'n1','B':'n2','C':'n3','D':'n4'}\n",
    "print(df1.append(data_dict,ignore_index=True))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11e8586f",
   "metadata": {},
   "source": [
    "### 다양한 방법으로 데이터 연결하기\n",
    "- ignore_index 인자 사용"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "5dd5594e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      A    B    C    D\n",
      "0    a0   b0   c0   d0\n",
      "1    a1   b1   c1   d1\n",
      "2    a2   b2   c2   d2\n",
      "3    a3   b3   c3   d3\n",
      "4    a4   b4   c4   d4\n",
      "5    a5   b5   c5   d5\n",
      "6    a6   b6   c6   d6\n",
      "7    a7   b7   c7   d7\n",
      "8    a8   b8   c8   d8\n",
      "9    a9   b9   c9   d9\n",
      "10  a10  b10  c10  d10\n",
      "11  a11  b11  c11  d11\n"
     ]
    }
   ],
   "source": [
    "row_concat_i=pd.concat([df1,df2,df3],ignore_index=True)\n",
    "print(row_concat_i)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ef5f673",
   "metadata": {},
   "source": [
    "- 열 방향으로 데이터 연결하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "903ecdd8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    A   B   C   D   A   B   C   D    A    B    C    D\n",
      "0  a0  b0  c0  d0  a4  b4  c4  d4   a8   b8   c8   d8\n",
      "1  a1  b1  c1  d1  a5  b5  c5  d5   a9   b9   c9   d9\n",
      "2  a2  b2  c2  d2  a6  b6  c6  d6  a10  b10  c10  d10\n",
      "3  a3  b3  c3  d3  a7  b7  c7  d7  a11  b11  c11  d11\n"
     ]
    }
   ],
   "source": [
    "col_concat=pd.concat([df1,df2,df3],axis=1)\n",
    "print(col_concat)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "62995bcb",
   "metadata": {},
   "source": [
    "- 열 이름으로 데이터 추출시 모두 나오게 됨"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "b1e25ffb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    A   A    A\n",
      "0  a0  a4   a8\n",
      "1  a1  a5   a9\n",
      "2  a2  a6  a10\n",
      "3  a3  a7  a11\n"
     ]
    }
   ],
   "source": [
    "print(col_concat['A'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a7094527",
   "metadata": {},
   "source": [
    "- 열 방향일떄 ignore_index=True 지정시 index가 새로 지정되게 된다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "a734f27a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   0   1   2   3   4   5   6   7    8    9    10   11\n",
      "0  a0  b0  c0  d0  a4  b4  c4  d4   a8   b8   c8   d8\n",
      "1  a1  b1  c1  d1  a5  b5  c5  d5   a9   b9   c9   d9\n",
      "2  a2  b2  c2  d2  a6  b6  c6  d6  a10  b10  c10  d10\n",
      "3  a3  b3  c3  d3  a7  b7  c7  d7  a11  b11  c11  d11\n"
     ]
    }
   ],
   "source": [
    "print(pd.concat([df1,df2,df3],axis=1,ignore_index=True))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8245a04f",
   "metadata": {},
   "source": [
    "- 서로 다른 열 이름을 부여하였을 때 concat을 사용하면 누락값인 NAN이 생기게 된다. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "36128bee",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     A    B    C    D    E    F    G    H\n",
      "0   a0   b0   c0   d0  NaN  NaN  NaN  NaN\n",
      "1   a1   b1   c1   d1  NaN  NaN  NaN  NaN\n",
      "2   a2   b2   c2   d2  NaN  NaN  NaN  NaN\n",
      "3   a3   b3   c3   d3  NaN  NaN  NaN  NaN\n",
      "0  NaN  NaN  NaN  NaN   a4   b4   c4   d4\n",
      "1  NaN  NaN  NaN  NaN   a5   b5   c5   d5\n",
      "2  NaN  NaN  NaN  NaN   a6   b6   c6   d6\n",
      "3  NaN  NaN  NaN  NaN   a7   b7   c7   d7\n",
      "0   a8  NaN   b8  NaN  NaN   c8  NaN   d8\n",
      "1   a9  NaN   b9  NaN  NaN   c9  NaN   d9\n",
      "2  a10  NaN  b10  NaN  NaN  c10  NaN  d10\n",
      "3  a11  NaN  b11  NaN  NaN  c11  NaN  d11\n"
     ]
    }
   ],
   "source": [
    "df1.columns=['A','B','C','D']\n",
    "df2.columns=['E','F','G','H']\n",
    "df3.columns=['A','C','F','H']\n",
    "row_concat=pd.concat([df1,df2,df3])\n",
    "print(row_concat)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a808a65d",
   "metadata": {},
   "source": [
    "- join인자를 inner로 두면 공통 열을 연결한 값이 나오게 된다 없으면 empty가 나오게 됨"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "4a248a5f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Empty DataFrame\n",
      "Columns: []\n",
      "Index: [0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3]\n"
     ]
    }
   ],
   "source": [
    "print(pd.concat([df1,df2,df3],join='inner'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "d910cc43",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     A    C\n",
      "0   a0   c0\n",
      "1   a1   c1\n",
      "2   a2   c2\n",
      "3   a3   c3\n",
      "0   a8   b8\n",
      "1   a9   b9\n",
      "2  a10  b10\n",
      "3  a11  b11\n"
     ]
    }
   ],
   "source": [
    "print(pd.concat([df1,df3],join='inner'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1b4e7f7",
   "metadata": {},
   "source": [
    "- 데이터프레임을 행 방향으로 연결하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "e3d53cc5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    A   B   C   D\n",
      "0  a0  b0  c0  d0\n",
      "1  a1  b1  c1  d1\n",
      "2  a2  b2  c2  d2\n",
      "3  a3  b3  c3  d3\n",
      "    E   F   G   H\n",
      "4  a4  b4  c4  d4\n",
      "5  a5  b5  c5  d5\n",
      "6  a6  b6  c6  d6\n",
      "7  a7  b7  c7  d7\n",
      "     A    C    F    H\n",
      "0   a8   b8   c8   d8\n",
      "2   a9   b9   c9   d9\n",
      "5  a10  b10  c10  d10\n",
      "7  a11  b11  c11  d11\n"
     ]
    }
   ],
   "source": [
    "df1.index=[0,1,2,3]\n",
    "df2.index=[4,5,6,7]\n",
    "df3.index=[0,2,5,7]\n",
    "\n",
    "print(df1)\n",
    "print(df2)\n",
    "print(df3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "09f3b711",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     A    B    C    D    E    F    G    H    A    C    F    H\n",
      "0   a0   b0   c0   d0  NaN  NaN  NaN  NaN   a8   b8   c8   d8\n",
      "1   a1   b1   c1   d1  NaN  NaN  NaN  NaN  NaN  NaN  NaN  NaN\n",
      "2   a2   b2   c2   d2  NaN  NaN  NaN  NaN   a9   b9   c9   d9\n",
      "3   a3   b3   c3   d3  NaN  NaN  NaN  NaN  NaN  NaN  NaN  NaN\n",
      "4  NaN  NaN  NaN  NaN   a4   b4   c4   d4  NaN  NaN  NaN  NaN\n",
      "5  NaN  NaN  NaN  NaN   a5   b5   c5   d5  a10  b10  c10  d10\n",
      "6  NaN  NaN  NaN  NaN   a6   b6   c6   d6  NaN  NaN  NaN  NaN\n",
      "7  NaN  NaN  NaN  NaN   a7   b7   c7   d7  a11  b11  c11  d11\n"
     ]
    }
   ],
   "source": [
    "col_concat=pd.concat([df1,df2,df3],axis=1)\n",
    "print(col_concat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "c3971159",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    A   B   C   D   A   C   F   H\n",
      "0  a0  b0  c0  d0  a8  b8  c8  d8\n",
      "2  a2  b2  c2  d2  a9  b9  c9  d9\n"
     ]
    }
   ],
   "source": [
    "print(pd.concat([df1,df3],axis=1,join='inner'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d35e4534",
   "metadata": {},
   "source": [
    "### 데이터 연결 마무리"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "22e903f7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      ident   personal    family\n",
      "0      dyer    William      Dyer\n",
      "1        pb      Frank   Pabodie\n",
      "2      lake   Anderson      Lake\n",
      "3       roe  Valentina   Roerich\n",
      "4  danforth      Frank  Danforth\n",
      "    name    lat    long\n",
      "0   DR-1 -49.85 -128.57\n",
      "1   DR-3 -47.15 -126.72\n",
      "2  MSK-4 -48.87 -123.40\n",
      "    taken person quant  reading\n",
      "0     619   dyer   rad     9.82\n",
      "1     619   dyer   sal     0.13\n",
      "2     622   dyer   rad     7.80\n",
      "3     622   dyer   sal     0.09\n",
      "4     734     pb   rad     8.41\n",
      "5     734   lake   sal     0.05\n",
      "6     734     pb  temp   -21.50\n",
      "7     735     pb   rad     7.22\n",
      "8     735    NaN   sal     0.06\n",
      "9     735    NaN  temp   -26.00\n",
      "10    751     pb   rad     4.35\n",
      "11    751     pb  temp   -18.50\n",
      "12    751   lake   sal     0.10\n",
      "13    752   lake   rad     2.19\n",
      "14    752   lake   sal     0.09\n",
      "15    752   lake  temp   -16.00\n",
      "16    752    roe   sal    41.60\n",
      "17    837   lake   rad     1.46\n",
      "18    837   lake   sal     0.21\n",
      "19    837    roe   sal    22.50\n",
      "20    844    roe   rad    11.25\n",
      "   ident   site       dated\n",
      "0    619   DR-1  1927-02-08\n",
      "2    734   DR-3  1939-01-07\n",
      "6    837  MSK-4  1932-01-14\n"
     ]
    }
   ],
   "source": [
    "person=pd.read_csv('C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data/survey_person.csv')\n",
    "site=pd.read_csv('C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data/survey_site.csv')\n",
    "survey=pd.read_csv('C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data/survey_survey.csv')\n",
    "visited=pd.read_csv('C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data/survey_visited.csv')\n",
    "visited_subset=visited.loc[[0,2,6],]\n",
    "print(person)\n",
    "print(site)\n",
    "print(survey)\n",
    "print(visited_subset)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "88a99798",
   "metadata": {},
   "source": [
    "- merge(): 기본적으로 내부 조인을 실행합니다. 지정한 데이터프레임을 왼쪽 merge안의 값을 오른쪽으로 지정합니다. left_on, right_on 인자를 사용하여 값이 일치해야 할 데이터프레임의 열을 지정하면 왼쪽 데이터프레임 기준으로 연결합니다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "79e23346",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    name    lat    long  ident   site       dated\n",
      "0   DR-1 -49.85 -128.57    619   DR-1  1927-02-08\n",
      "1   DR-3 -47.15 -126.72    734   DR-3  1939-01-07\n",
      "2  MSK-4 -48.87 -123.40    837  MSK-4  1932-01-14\n"
     ]
    }
   ],
   "source": [
    "o2o_merge=site.merge(visited_subset,left_on='name',right_on='site')\n",
    "print(o2o_merge)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "7b2de367",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    name    lat    long  ident   site       dated\n",
      "0   DR-1 -49.85 -128.57    619   DR-1  1927-02-08\n",
      "1   DR-1 -49.85 -128.57    622   DR-1  1927-02-10\n",
      "2   DR-1 -49.85 -128.57    844   DR-1  1932-03-22\n",
      "3   DR-3 -47.15 -126.72    734   DR-3  1939-01-07\n",
      "4   DR-3 -47.15 -126.72    735   DR-3  1930-01-12\n",
      "5   DR-3 -47.15 -126.72    751   DR-3  1930-02-26\n",
      "6   DR-3 -47.15 -126.72    752   DR-3         NaN\n",
      "7  MSK-4 -48.87 -123.40    837  MSK-4  1932-01-14\n"
     ]
    }
   ],
   "source": [
    "m2o_merge=site.merge(visited,left_on='name',right_on='site')\n",
    "print(m2o_merge)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "711aa8f8",
   "metadata": {},
   "source": [
    "- left_on과 right_on에 전달하는 값은 여러개여도 상관없다\n",
    "- _x는 왼쪽 데이터프레임의 열 _y는 오른쪽 데이터프레임의 열이다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "8ab62447",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   ident   personal   family  taken person quant  reading\n",
      "0   dyer    William     Dyer    619   dyer   rad     9.82\n",
      "1   dyer    William     Dyer    619   dyer   sal     0.13\n",
      "2   dyer    William     Dyer    622   dyer   rad     7.80\n",
      "3   dyer    William     Dyer    622   dyer   sal     0.09\n",
      "4     pb      Frank  Pabodie    734     pb   rad     8.41\n",
      "5     pb      Frank  Pabodie    734     pb  temp   -21.50\n",
      "6     pb      Frank  Pabodie    735     pb   rad     7.22\n",
      "7     pb      Frank  Pabodie    751     pb   rad     4.35\n",
      "8     pb      Frank  Pabodie    751     pb  temp   -18.50\n",
      "9   lake   Anderson     Lake    734   lake   sal     0.05\n",
      "10  lake   Anderson     Lake    751   lake   sal     0.10\n",
      "11  lake   Anderson     Lake    752   lake   rad     2.19\n",
      "12  lake   Anderson     Lake    752   lake   sal     0.09\n",
      "13  lake   Anderson     Lake    752   lake  temp   -16.00\n",
      "14  lake   Anderson     Lake    837   lake   rad     1.46\n",
      "15  lake   Anderson     Lake    837   lake   sal     0.21\n",
      "16   roe  Valentina  Roerich    752    roe   sal    41.60\n",
      "17   roe  Valentina  Roerich    837    roe   sal    22.50\n",
      "18   roe  Valentina  Roerich    844    roe   rad    11.25\n",
      "    ident   site       dated  taken person quant  reading\n",
      "0     619   DR-1  1927-02-08    619   dyer   rad     9.82\n",
      "1     619   DR-1  1927-02-08    619   dyer   sal     0.13\n",
      "2     622   DR-1  1927-02-10    622   dyer   rad     7.80\n",
      "3     622   DR-1  1927-02-10    622   dyer   sal     0.09\n",
      "4     734   DR-3  1939-01-07    734     pb   rad     8.41\n",
      "5     734   DR-3  1939-01-07    734   lake   sal     0.05\n",
      "6     734   DR-3  1939-01-07    734     pb  temp   -21.50\n",
      "7     735   DR-3  1930-01-12    735     pb   rad     7.22\n",
      "8     735   DR-3  1930-01-12    735    NaN   sal     0.06\n",
      "9     735   DR-3  1930-01-12    735    NaN  temp   -26.00\n",
      "10    751   DR-3  1930-02-26    751     pb   rad     4.35\n",
      "11    751   DR-3  1930-02-26    751     pb  temp   -18.50\n",
      "12    751   DR-3  1930-02-26    751   lake   sal     0.10\n",
      "13    752   DR-3         NaN    752   lake   rad     2.19\n",
      "14    752   DR-3         NaN    752   lake   sal     0.09\n",
      "15    752   DR-3         NaN    752   lake  temp   -16.00\n",
      "16    752   DR-3         NaN    752    roe   sal    41.60\n",
      "17    837  MSK-4  1932-01-14    837   lake   rad     1.46\n",
      "18    837  MSK-4  1932-01-14    837   lake   sal     0.21\n",
      "19    837  MSK-4  1932-01-14    837    roe   sal    22.50\n",
      "20    844   DR-1  1932-03-22    844    roe   rad    11.25\n"
     ]
    }
   ],
   "source": [
    "ps=person.merge(survey,left_on='ident',right_on='person')\n",
    "vs=visited.merge(survey,left_on='ident',right_on='taken')\n",
    "print(ps)\n",
    "print(vs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "6b184ebe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   ident_x   personal   family  taken_x person_x quant  reading  ident_y  \\\n",
      "0     dyer    William     Dyer      619     dyer   rad     9.82      619   \n",
      "1     dyer    William     Dyer      619     dyer   sal     0.13      619   \n",
      "2     dyer    William     Dyer      622     dyer   rad     7.80      622   \n",
      "3     dyer    William     Dyer      622     dyer   sal     0.09      622   \n",
      "4       pb      Frank  Pabodie      734       pb   rad     8.41      734   \n",
      "5       pb      Frank  Pabodie      734       pb  temp   -21.50      734   \n",
      "6       pb      Frank  Pabodie      735       pb   rad     7.22      735   \n",
      "7       pb      Frank  Pabodie      751       pb   rad     4.35      751   \n",
      "8       pb      Frank  Pabodie      751       pb  temp   -18.50      751   \n",
      "9     lake   Anderson     Lake      734     lake   sal     0.05      734   \n",
      "10    lake   Anderson     Lake      751     lake   sal     0.10      751   \n",
      "11    lake   Anderson     Lake      752     lake   rad     2.19      752   \n",
      "12    lake   Anderson     Lake      752     lake   sal     0.09      752   \n",
      "13    lake   Anderson     Lake      752     lake  temp   -16.00      752   \n",
      "14    lake   Anderson     Lake      837     lake   rad     1.46      837   \n",
      "15    lake   Anderson     Lake      837     lake   sal     0.21      837   \n",
      "16     roe  Valentina  Roerich      752      roe   sal    41.60      752   \n",
      "17     roe  Valentina  Roerich      837      roe   sal    22.50      837   \n",
      "18     roe  Valentina  Roerich      844      roe   rad    11.25      844   \n",
      "\n",
      "     site       dated  taken_y person_y  \n",
      "0    DR-1  1927-02-08      619     dyer  \n",
      "1    DR-1  1927-02-08      619     dyer  \n",
      "2    DR-1  1927-02-10      622     dyer  \n",
      "3    DR-1  1927-02-10      622     dyer  \n",
      "4    DR-3  1939-01-07      734       pb  \n",
      "5    DR-3  1939-01-07      734       pb  \n",
      "6    DR-3  1930-01-12      735       pb  \n",
      "7    DR-3  1930-02-26      751       pb  \n",
      "8    DR-3  1930-02-26      751       pb  \n",
      "9    DR-3  1939-01-07      734     lake  \n",
      "10   DR-3  1930-02-26      751     lake  \n",
      "11   DR-3         NaN      752     lake  \n",
      "12   DR-3         NaN      752     lake  \n",
      "13   DR-3         NaN      752     lake  \n",
      "14  MSK-4  1932-01-14      837     lake  \n",
      "15  MSK-4  1932-01-14      837     lake  \n",
      "16   DR-3         NaN      752      roe  \n",
      "17  MSK-4  1932-01-14      837      roe  \n",
      "18   DR-1  1932-03-22      844      roe  \n"
     ]
    }
   ],
   "source": [
    "ps_vs=ps.merge(vs,left_on=['ident','taken','quant','reading'],right_on=['person','ident','quant','reading'])\n",
    "print(ps_vs)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "967fff27",
   "metadata": {},
   "source": [
    "## 누락값 처리하기\n",
    "- 누락값이란 NaN 처럼 비어있는 값이다.\n",
    "- 0,''와 다른개념으로 완전히 비어있는 값을 말하는 것이므로 주의해야한다.\n",
    "- pandas에는 누락값을 확인할 수 있는 isnull(), notnull()이 존재한다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "de018001",
   "metadata": {},
   "outputs": [],
   "source": [
    "from numpy import NaN,NAN,nan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "2967cde1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "False\n",
      "True\n"
     ]
    }
   ],
   "source": [
    "print(pd.isnull(NaN))\n",
    "print(pd.notnull(NaN))\n",
    "print(pd.notnull(32))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "4529dabe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    ident   site       dated  taken person quant  reading\n",
      "0     619   DR-1  1927-02-08    619   dyer   rad     9.82\n",
      "1     619   DR-1  1927-02-08    619   dyer   sal     0.13\n",
      "2     622   DR-1  1927-02-10    622   dyer   rad     7.80\n",
      "3     622   DR-1  1927-02-10    622   dyer   sal     0.09\n",
      "4     734   DR-3  1939-01-07    734     pb   rad     8.41\n",
      "5     734   DR-3  1939-01-07    734   lake   sal     0.05\n",
      "6     734   DR-3  1939-01-07    734     pb  temp   -21.50\n",
      "7     735   DR-3  1930-01-12    735     pb   rad     7.22\n",
      "8     735   DR-3  1930-01-12    735    NaN   sal     0.06\n",
      "9     735   DR-3  1930-01-12    735    NaN  temp   -26.00\n",
      "10    751   DR-3  1930-02-26    751     pb   rad     4.35\n",
      "11    751   DR-3  1930-02-26    751     pb  temp   -18.50\n",
      "12    751   DR-3  1930-02-26    751   lake   sal     0.10\n",
      "13    752   DR-3         NaN    752   lake   rad     2.19\n",
      "14    752   DR-3         NaN    752   lake   sal     0.09\n",
      "15    752   DR-3         NaN    752   lake  temp   -16.00\n",
      "16    752   DR-3         NaN    752    roe   sal    41.60\n",
      "17    837  MSK-4  1932-01-14    837   lake   rad     1.46\n",
      "18    837  MSK-4  1932-01-14    837   lake   sal     0.21\n",
      "19    837  MSK-4  1932-01-14    837    roe   sal    22.50\n",
      "20    844   DR-1  1932-03-22    844    roe   rad    11.25\n",
      "         dated\n",
      "0   1927-02-08\n",
      "1   1927-02-08\n",
      "2   1927-02-10\n",
      "3   1927-02-10\n",
      "4   1939-01-07\n",
      "5   1939-01-07\n",
      "6   1939-01-07\n",
      "7   1930-01-12\n",
      "8   1930-01-12\n",
      "9   1930-01-12\n",
      "10  1930-02-26\n",
      "11  1930-02-26\n",
      "12  1930-02-26\n",
      "13         NaN\n",
      "14         NaN\n",
      "15         NaN\n",
      "16         NaN\n",
      "17  1932-01-14\n",
      "18  1932-01-14\n",
      "19  1932-01-14\n",
      "20  1932-03-22\n"
     ]
    }
   ],
   "source": [
    "print(vs)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "25542ed6",
   "metadata": {},
   "source": [
    "- 누락값을 없앤 정보만 얻고 싶으면 불린 추출을 이용하여 데이터를 추출하면 된다.\n",
    "- 누락값을 포함한 열 전체를 제외하고 싶을떄 dorpna()를 사용한다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "id": "2174bd81",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         dated\n",
      "0   1927-02-08\n",
      "1   1927-02-08\n",
      "2   1927-02-10\n",
      "3   1927-02-10\n",
      "4   1939-01-07\n",
      "5   1939-01-07\n",
      "6   1939-01-07\n",
      "7   1930-01-12\n",
      "8   1930-01-12\n",
      "9   1930-01-12\n",
      "10  1930-02-26\n",
      "11  1930-02-26\n",
      "12  1930-02-26\n",
      "17  1932-01-14\n",
      "18  1932-01-14\n",
      "19  1932-01-14\n",
      "20  1932-03-22\n"
     ]
    }
   ],
   "source": [
    "Not_null=vs[['dated']].dropna()\n",
    "print(Not_null)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d614df41",
   "metadata": {},
   "source": [
    "### 누락값의 개수 구하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "id": "0f4a1d4e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Date  Day  Cases_Guinea  Cases_Liberia  Cases_SierraLeone  \\\n",
      "0    1/5/2015  289        2776.0            NaN            10030.0   \n",
      "1    1/4/2015  288        2775.0            NaN             9780.0   \n",
      "2    1/3/2015  287        2769.0         8166.0             9722.0   \n",
      "3    1/2/2015  286           NaN         8157.0                NaN   \n",
      "4  12/31/2014  284        2730.0         8115.0             9633.0   \n",
      "\n",
      "   Cases_Nigeria  Cases_Senegal  Cases_UnitedStates  Cases_Spain  Cases_Mali  \\\n",
      "0            NaN            NaN                 NaN          NaN         NaN   \n",
      "1            NaN            NaN                 NaN          NaN         NaN   \n",
      "2            NaN            NaN                 NaN          NaN         NaN   \n",
      "3            NaN            NaN                 NaN          NaN         NaN   \n",
      "4            NaN            NaN                 NaN          NaN         NaN   \n",
      "\n",
      "   Deaths_Guinea  Deaths_Liberia  Deaths_SierraLeone  Deaths_Nigeria  \\\n",
      "0         1786.0             NaN              2977.0             NaN   \n",
      "1         1781.0             NaN              2943.0             NaN   \n",
      "2         1767.0          3496.0              2915.0             NaN   \n",
      "3            NaN          3496.0                 NaN             NaN   \n",
      "4         1739.0          3471.0              2827.0             NaN   \n",
      "\n",
      "   Deaths_Senegal  Deaths_UnitedStates  Deaths_Spain  Deaths_Mali  \n",
      "0             NaN                  NaN           NaN          NaN  \n",
      "1             NaN                  NaN           NaN          NaN  \n",
      "2             NaN                  NaN           NaN          NaN  \n",
      "3             NaN                  NaN           NaN          NaN  \n",
      "4             NaN                  NaN           NaN          NaN  \n"
     ]
    }
   ],
   "source": [
    "ebola=pd.read_csv('C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data/country_timeseries.csv')\n",
    "print(ebola.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1523f89d",
   "metadata": {},
   "source": [
    "- count()로 누락값이 아닌 값의 개수를 알 수 있다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "id": "5b768165",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Date                   122\n",
      "Day                    122\n",
      "Cases_Guinea            93\n",
      "Cases_Liberia           83\n",
      "Cases_SierraLeone       87\n",
      "Cases_Nigeria           38\n",
      "Cases_Senegal           25\n",
      "Cases_UnitedStates      18\n",
      "Cases_Spain             16\n",
      "Cases_Mali              12\n",
      "Deaths_Guinea           92\n",
      "Deaths_Liberia          81\n",
      "Deaths_SierraLeone      87\n",
      "Deaths_Nigeria          38\n",
      "Deaths_Senegal          22\n",
      "Deaths_UnitedStates     18\n",
      "Deaths_Spain            16\n",
      "Deaths_Mali             12\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(ebola.count())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d1281214",
   "metadata": {},
   "outputs": [],
   "source": [
    "- shape[0]을 이용하여 누락값의 개수를 파악할 수 있다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "id": "2b009720",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Date                     0\n",
      "Day                      0\n",
      "Cases_Guinea            29\n",
      "Cases_Liberia           39\n",
      "Cases_SierraLeone       35\n",
      "Cases_Nigeria           84\n",
      "Cases_Senegal           97\n",
      "Cases_UnitedStates     104\n",
      "Cases_Spain            106\n",
      "Cases_Mali             110\n",
      "Deaths_Guinea           30\n",
      "Deaths_Liberia          41\n",
      "Deaths_SierraLeone      35\n",
      "Deaths_Nigeria          84\n",
      "Deaths_Senegal         100\n",
      "Deaths_UnitedStates    104\n",
      "Deaths_Spain           106\n",
      "Deaths_Mali            110\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(ebola.shape[0]-ebola.count()) #122에서 count된 값을 각각 뺴준것!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "id": "2450a7d2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1214\n",
      "29\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "print(np.count_nonzero(ebola.isnull()))\n",
    "print(np.count_nonzero(ebola['Cases_Guinea'].isnull()))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe35c121",
   "metadata": {},
   "source": [
    "- value_counts는 지정한 열의 빈도를 구하는 메서드로 이를 이용하여 누락값을 셀 수 있다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "id": "630a7340",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "NaN       29\n",
      "86.0       3\n",
      "495.0      2\n",
      "112.0      2\n",
      "390.0      2\n",
      "          ..\n",
      "1199.0     1\n",
      "1298.0     1\n",
      "1350.0     1\n",
      "1472.0     1\n",
      "49.0       1\n",
      "Name: Cases_Guinea, Length: 89, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(ebola['Cases_Guinea'].value_counts(dropna=False))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a26fe541",
   "metadata": {},
   "source": [
    "### 누락값 처리하기 - 변경 삭제\n",
    "- 누락값 변경하기\n",
    "- fillna(0): 누락값을 0으로 변경한다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 206,
   "id": "a80c3ff9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Date  Day  Cases_Guinea  Cases_Liberia  Cases_SierraLeone\n",
      "0    1/5/2015  289        2776.0            0.0            10030.0\n",
      "1    1/4/2015  288        2775.0            0.0             9780.0\n",
      "2    1/3/2015  287        2769.0         8166.0             9722.0\n",
      "3    1/2/2015  286           0.0         8157.0                0.0\n",
      "4  12/31/2014  284        2730.0         8115.0             9633.0\n",
      "5  12/28/2014  281        2706.0         8018.0             9446.0\n",
      "6  12/27/2014  280        2695.0            0.0             9409.0\n",
      "7  12/24/2014  277        2630.0         7977.0             9203.0\n",
      "8  12/21/2014  273        2597.0            0.0             9004.0\n",
      "9  12/20/2014  272        2571.0         7862.0             8939.0\n"
     ]
    }
   ],
   "source": [
    "print(ebola.fillna(0).iloc[0:10,0:5])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd08013d",
   "metadata": {},
   "source": [
    "- fillna(method='ffill')을 지정하면 바로직전에 사용된 값을 채워 넣게 된다. 0행과 1행은 이전에 nan이기 때문에 그대로 nan이 된다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "id": "083c6a4c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Date  Day  Cases_Guinea  Cases_Liberia  Cases_SierraLeone\n",
      "0    1/5/2015  289        2776.0            NaN            10030.0\n",
      "1    1/4/2015  288        2775.0            NaN             9780.0\n",
      "2    1/3/2015  287        2769.0         8166.0             9722.0\n",
      "3    1/2/2015  286        2769.0         8157.0             9722.0\n",
      "4  12/31/2014  284        2730.0         8115.0             9633.0\n",
      "5  12/28/2014  281        2706.0         8018.0             9446.0\n",
      "6  12/27/2014  280        2695.0         8018.0             9409.0\n",
      "7  12/24/2014  277        2630.0         7977.0             9203.0\n",
      "8  12/21/2014  273        2597.0         7977.0             9004.0\n",
      "9  12/20/2014  272        2571.0         7862.0             8939.0\n"
     ]
    }
   ],
   "source": [
    "print(ebola.fillna(method='ffill').iloc[0:10,0:5])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3521578a",
   "metadata": {},
   "source": [
    "- fillna(method='bfill')을 지정하면 이후에 나타나는 값으로 채워넣게 된다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 209,
   "id": "fb00a93c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Date  Day  Cases_Guinea  Cases_Liberia  Cases_SierraLeone\n",
      "0    1/5/2015  289        2776.0         8166.0            10030.0\n",
      "1    1/4/2015  288        2775.0         8166.0             9780.0\n",
      "2    1/3/2015  287        2769.0         8166.0             9722.0\n",
      "3    1/2/2015  286        2730.0         8157.0             9633.0\n",
      "4  12/31/2014  284        2730.0         8115.0             9633.0\n",
      "5  12/28/2014  281        2706.0         8018.0             9446.0\n",
      "6  12/27/2014  280        2695.0         7977.0             9409.0\n",
      "7  12/24/2014  277        2630.0         7977.0             9203.0\n",
      "8  12/21/2014  273        2597.0         7862.0             9004.0\n",
      "9  12/20/2014  272        2571.0         7862.0             8939.0\n"
     ]
    }
   ],
   "source": [
    "print(ebola.fillna(method='bfill').iloc[0:10,0:5])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "92311565",
   "metadata": {},
   "source": [
    "- interpolate(): 이전과 이후에 나오는 값의 중간값을 구해 채워넣게 됩니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 211,
   "id": "cf380cf2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Date  Day  Cases_Guinea  Cases_Liberia  Cases_SierraLeone\n",
      "0    1/5/2015  289        2776.0            NaN            10030.0\n",
      "1    1/4/2015  288        2775.0            NaN             9780.0\n",
      "2    1/3/2015  287        2769.0         8166.0             9722.0\n",
      "3    1/2/2015  286        2749.5         8157.0             9677.5\n",
      "4  12/31/2014  284        2730.0         8115.0             9633.0\n",
      "5  12/28/2014  281        2706.0         8018.0             9446.0\n",
      "6  12/27/2014  280        2695.0         7997.5             9409.0\n",
      "7  12/24/2014  277        2630.0         7977.0             9203.0\n",
      "8  12/21/2014  273        2597.0         7919.5             9004.0\n",
      "9  12/20/2014  272        2571.0         7862.0             8939.0\n"
     ]
    }
   ],
   "source": [
    "print(ebola.interpolate().iloc[0:10,0:5])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "50ceeb8b",
   "metadata": {},
   "source": [
    "### 누락값이 포함된 데이터 계산하기\n",
    "- 각 열에 누락값이 많으면 계산시 NaN값이 많아지게 된다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "id": "d4c76181",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     Cases_Guinea  Cases_Liberia  Cases_SierraLeone\n",
      "0          2776.0            NaN            10030.0\n",
      "1          2775.0            NaN             9780.0\n",
      "2          2769.0         8166.0             9722.0\n",
      "3             NaN         8157.0                NaN\n",
      "4          2730.0         8115.0             9633.0\n",
      "..            ...            ...                ...\n",
      "117         103.0            8.0                6.0\n",
      "118          86.0            NaN                NaN\n",
      "119          86.0            NaN                NaN\n",
      "120          86.0            NaN                NaN\n",
      "121          49.0            NaN                NaN\n",
      "\n",
      "[122 rows x 3 columns]\n",
      "0          NaN\n",
      "1          NaN\n",
      "2      20657.0\n",
      "3          NaN\n",
      "4      20478.0\n",
      "        ...   \n",
      "117      117.0\n",
      "118        NaN\n",
      "119        NaN\n",
      "120        NaN\n",
      "121        NaN\n",
      "Name: Cases_multiple, Length: 122, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "ebola['Cases_multiple']=ebola['Cases_Guinea']+ebola['Cases_Liberia']+ebola['Cases_SierraLeone']\n",
    "ebola_subset=ebola.loc[:,['Cases_Guinea','Cases_Liberia','Cases_SierraLeone']]\n",
    "print(ebola_subset)\n",
    "print(ebola['Cases_multiple'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e805ce4",
   "metadata": {},
   "source": [
    "- sum(skipna=True): 누락값을 포함하여 계산합니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "id": "10573909",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "84729.0\n"
     ]
    }
   ],
   "source": [
    "print(ebola.Cases_Guinea.sum(skipna=True))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 217,
   "id": "14491d4f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "nan\n"
     ]
    }
   ],
   "source": [
    "print(ebola['Cases_Guinea'].sum(skipna=False))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10829b29",
   "metadata": {},
   "source": [
    "## 깔끔한 데이터\n",
    "### 열과 피벗"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d04d25b",
   "metadata": {},
   "source": [
    "- melt(): 지정한 열의 데이터를 모두 행으로 정리해줍니다. \n",
    "- melt안의 인자들\n",
    "- id_vars: 위치를 그래도 유지할 열의 이름을 지정합니다.\n",
    "- value_vars: 행으로 위치를 변경할 열의 이름을 지정합니다.\n",
    "- var_name: value_vars로 위치를 변경한 열의 이름을 지정합니다.\n",
    "- value_name: var_name으로 위치를 변경할 열의 데이터를 저장한 열의 이름으로 지정합니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "57b33bc0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "             religion  <$10k  $10-20k  $20-30k  $30-40k  $40-50k  $50-75k  \\\n",
      "0            Agnostic     27       34       60       81       76      137   \n",
      "1             Atheist     12       27       37       52       35       70   \n",
      "2            Buddhist     27       21       30       34       33       58   \n",
      "3            Catholic    418      617      732      670      638     1116   \n",
      "4  Don’t know/refused     15       14       15       11       10       35   \n",
      "\n",
      "   $75-100k  $100-150k  >150k  Don't know/refused  \n",
      "0       122        109     84                  96  \n",
      "1        73         59     74                  76  \n",
      "2        62         39     53                  54  \n",
      "3       949        792    633                1489  \n",
      "4        21         17     18                 116  \n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "pew=pd.read_csv('C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data/pew.csv')\n",
    "print(pew.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "03d3c456",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   religion  <$10k  $10-20k  $20-30k  $30-40k  $40-50k\n",
      "0                  Agnostic     27       34       60       81       76\n",
      "1                   Atheist     12       27       37       52       35\n",
      "2                  Buddhist     27       21       30       34       33\n",
      "3                  Catholic    418      617      732      670      638\n",
      "4        Don’t know/refused     15       14       15       11       10\n",
      "5          Evangelical Prot    575      869     1064      982      881\n",
      "6                     Hindu      1        9        7        9       11\n",
      "7   Historically Black Prot    228      244      236      238      197\n",
      "8         Jehovah's Witness     20       27       24       24       21\n",
      "9                    Jewish     19       19       25       25       30\n",
      "10            Mainline Prot    289      495      619      655      651\n",
      "11                   Mormon     29       40       48       51       56\n",
      "12                   Muslim      6        7        9       10        9\n",
      "13                 Orthodox     13       17       23       32       32\n",
      "14          Other Christian      9        7       11       13       13\n",
      "15             Other Faiths     20       33       40       46       49\n",
      "16    Other World Religions      5        2        3        4        2\n",
      "17             Unaffiliated    217      299      374      365      341\n"
     ]
    }
   ],
   "source": [
    "print(pew.iloc[:,0:6])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "052bb9f1",
   "metadata": {},
   "source": [
    "- id_vavrs 인자값으로 지정한 열(religion)을 제외한 나머지 소득 정보 열이 variable에 정렬 되고 해당하는 열의 데이터도 value열로 정리되었다. '이 과정을 religion열을 고정하여 피벗했다' 라고 한다 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "321428af",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                  religion            variable  value\n",
      "0                 Agnostic               <$10k     27\n",
      "1                  Atheist               <$10k     12\n",
      "2                 Buddhist               <$10k     27\n",
      "3                 Catholic               <$10k    418\n",
      "4       Don’t know/refused               <$10k     15\n",
      "..                     ...                 ...    ...\n",
      "175               Orthodox  Don't know/refused     73\n",
      "176        Other Christian  Don't know/refused     18\n",
      "177           Other Faiths  Don't know/refused     71\n",
      "178  Other World Religions  Don't know/refused      8\n",
      "179           Unaffiliated  Don't know/refused    597\n",
      "\n",
      "[180 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "pew_long=pd.melt(pew,id_vars='religion')\n",
    "print(pew_long)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f4410da",
   "metadata": {},
   "source": [
    "- variable과 value는 var_name과 value_name으로 지정할 수 있다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "bbb2317a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "             religion income  count\n",
      "0            Agnostic  <$10k     27\n",
      "1             Atheist  <$10k     12\n",
      "2            Buddhist  <$10k     27\n",
      "3            Catholic  <$10k    418\n",
      "4  Don’t know/refused  <$10k     15\n"
     ]
    }
   ],
   "source": [
    "pew_long=pd.melt(pew,id_vars='religion',var_name='income',value_name='count')\n",
    "print(pew_long.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f96314b4",
   "metadata": {},
   "source": [
    "- 2개 이상의 열을 고정하고 나머지 열을 행으로 바꾸기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "6f9a42ce",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   year        artist                    track  time date.entered  wk1   wk2  \\\n",
      "0  2000         2 Pac  Baby Don't Cry (Keep...  4:22   2000-02-26   87  82.0   \n",
      "1  2000       2Ge+her  The Hardest Part Of ...  3:15   2000-09-02   91  87.0   \n",
      "2  2000  3 Doors Down               Kryptonite  3:53   2000-04-08   81  70.0   \n",
      "3  2000  3 Doors Down                    Loser  4:24   2000-10-21   76  76.0   \n",
      "4  2000      504 Boyz            Wobble Wobble  3:35   2000-04-15   57  34.0   \n",
      "\n",
      "    wk3   wk4   wk5   wk6   wk7   wk8   wk9  wk10  wk11  \n",
      "0  72.0  77.0  87.0  94.0  99.0   NaN   NaN   NaN   NaN  \n",
      "1  92.0   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  \n",
      "2  68.0  67.0  66.0  57.0  54.0  53.0  51.0  51.0  51.0  \n",
      "3  72.0  69.0  67.0  65.0  55.0  59.0  62.0  61.0  61.0  \n",
      "4  25.0  17.0  17.0  31.0  36.0  49.0  53.0  57.0  64.0  \n",
      "(317, 81)\n"
     ]
    }
   ],
   "source": [
    "billboard=pd.read_csv('C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data/billboard.csv')\n",
    "print(billboard.iloc[0:5,0:16])\n",
    "print(billboard.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7149143f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       year            artist                    track  time date.entered  \\\n",
      "0      2000             2 Pac  Baby Don't Cry (Keep...  4:22   2000-02-26   \n",
      "1      2000           2Ge+her  The Hardest Part Of ...  3:15   2000-09-02   \n",
      "2      2000      3 Doors Down               Kryptonite  3:53   2000-04-08   \n",
      "3      2000      3 Doors Down                    Loser  4:24   2000-10-21   \n",
      "4      2000          504 Boyz            Wobble Wobble  3:35   2000-04-15   \n",
      "...     ...               ...                      ...   ...          ...   \n",
      "24087  2000       Yankee Grey     Another Nine Minutes  3:10   2000-04-29   \n",
      "24088  2000  Yearwood, Trisha          Real Live Woman  3:55   2000-04-01   \n",
      "24089  2000   Ying Yang Twins  Whistle While You Tw...  4:19   2000-03-18   \n",
      "24090  2000     Zombie Nation            Kernkraft 400  3:30   2000-09-02   \n",
      "24091  2000   matchbox twenty                     Bent  4:12   2000-04-29   \n",
      "\n",
      "       week  rating  \n",
      "0       wk1    87.0  \n",
      "1       wk1    91.0  \n",
      "2       wk1    81.0  \n",
      "3       wk1    76.0  \n",
      "4       wk1    57.0  \n",
      "...     ...     ...  \n",
      "24087  wk76     NaN  \n",
      "24088  wk76     NaN  \n",
      "24089  wk76     NaN  \n",
      "24090  wk76     NaN  \n",
      "24091  wk76     NaN  \n",
      "\n",
      "[24092 rows x 7 columns]\n"
     ]
    }
   ],
   "source": [
    "billboard_long=pd.melt(billboard, id_vars=['year','artist','track','time','date.entered'],var_name='week',value_name='rating')\n",
    "print(billboard_long)\n",
    "# 행이 엄청 늘어난 것을 볼 수 있다."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1cf0d448",
   "metadata": {},
   "source": [
    "## 열 이름 관리하기\n",
    "### 하나의 열이 여러 의미를 가지고 있는 경우"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "7d786753",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['Date', 'Day', 'Cases_Guinea', 'Cases_Liberia', 'Cases_SierraLeone',\n",
      "       'Cases_Nigeria', 'Cases_Senegal', 'Cases_UnitedStates', 'Cases_Spain',\n",
      "       'Cases_Mali', 'Deaths_Guinea', 'Deaths_Liberia', 'Deaths_SierraLeone',\n",
      "       'Deaths_Nigeria', 'Deaths_Senegal', 'Deaths_UnitedStates',\n",
      "       'Deaths_Spain', 'Deaths_Mali'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "ebola=pd.read_csv('C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data/country_timeseries.csv')\n",
    "print(ebola.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "43aa6d28",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Date  Day  Cases_Guinea  Cases_Liberia  Deaths_Guinea  Deaths_Liberia\n",
      "0    1/5/2015  289        2776.0            NaN         1786.0             NaN\n",
      "1    1/4/2015  288        2775.0            NaN         1781.0             NaN\n",
      "2    1/3/2015  287        2769.0         8166.0         1767.0          3496.0\n",
      "3    1/2/2015  286           NaN         8157.0            NaN          3496.0\n",
      "4  12/31/2014  284        2730.0         8115.0         1739.0          3471.0\n"
     ]
    }
   ],
   "source": [
    "print(ebola.iloc[:5,[0,1,2,3,10,11]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "be436183",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "            Date  Day      variable   value\n",
      "0       1/5/2015  289  Cases_Guinea  2776.0\n",
      "1       1/4/2015  288  Cases_Guinea  2775.0\n",
      "2       1/3/2015  287  Cases_Guinea  2769.0\n",
      "3       1/2/2015  286  Cases_Guinea     NaN\n",
      "4     12/31/2014  284  Cases_Guinea  2730.0\n",
      "...          ...  ...           ...     ...\n",
      "1947   3/27/2014    5   Deaths_Mali     NaN\n",
      "1948   3/26/2014    4   Deaths_Mali     NaN\n",
      "1949   3/25/2014    3   Deaths_Mali     NaN\n",
      "1950   3/24/2014    2   Deaths_Mali     NaN\n",
      "1951   3/22/2014    0   Deaths_Mali     NaN\n",
      "\n",
      "[1952 rows x 4 columns]\n"
     ]
    }
   ],
   "source": [
    "ebola_long=pd.melt(ebola,id_vars=['Date','Day'])\n",
    "print(ebola_long)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c096bbf4",
   "metadata": {},
   "source": [
    "- ebola 데이터 집합의 열 중 Deaths_Guinea는 '사망자 수'와 '나라 이름'을 합쳐 만든 이름입니다.\n",
    "- split 메서드로 열 이름을 분리할 수 있습니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "04a64627",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0       [Cases, Guinea]\n",
      "1       [Cases, Guinea]\n",
      "2       [Cases, Guinea]\n",
      "3       [Cases, Guinea]\n",
      "4       [Cases, Guinea]\n",
      "             ...       \n",
      "1947     [Deaths, Mali]\n",
      "1948     [Deaths, Mali]\n",
      "1949     [Deaths, Mali]\n",
      "1950     [Deaths, Mali]\n",
      "1951     [Deaths, Mali]\n",
      "Name: variable, Length: 1952, dtype: object\n"
     ]
    }
   ],
   "source": [
    "variable_split=ebola_long.variable.str.split('_')\n",
    "print(variable_split)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "2af3c44e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    Cases\n",
      "1    Cases\n",
      "2    Cases\n",
      "3    Cases\n",
      "4    Cases\n",
      "Name: variable, dtype: object\n",
      "1947    Deaths\n",
      "1948    Deaths\n",
      "1949    Deaths\n",
      "1950    Deaths\n",
      "1951    Deaths\n",
      "Name: variable, dtype: object\n",
      "0    Guinea\n",
      "1    Guinea\n",
      "2    Guinea\n",
      "3    Guinea\n",
      "4    Guinea\n",
      "Name: variable, dtype: object\n",
      "1947    Mali\n",
      "1948    Mali\n",
      "1949    Mali\n",
      "1950    Mali\n",
      "1951    Mali\n",
      "Name: variable, dtype: object\n"
     ]
    }
   ],
   "source": [
    "status_values=variable_split.str.get(0)\n",
    "country_values=variable_split.str.get(1)\n",
    "\n",
    "print(status_values[:5])\n",
    "print(status_values[-5:])\n",
    "print(country_values[:5])\n",
    "print(country_values[-5:])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0a21078a",
   "metadata": {},
   "source": [
    "- 문자열로 분리한 데이터를 데이터프레임에 집어넣기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "39e0f86d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Date  Day      variable   value status country\n",
      "0    1/5/2015  289  Cases_Guinea  2776.0  Cases  Guinea\n",
      "1    1/4/2015  288  Cases_Guinea  2775.0  Cases  Guinea\n",
      "2    1/3/2015  287  Cases_Guinea  2769.0  Cases  Guinea\n",
      "3    1/2/2015  286  Cases_Guinea     NaN  Cases  Guinea\n",
      "4  12/31/2014  284  Cases_Guinea  2730.0  Cases  Guinea\n"
     ]
    }
   ],
   "source": [
    "ebola_long['status']=status_values\n",
    "ebola_long['country']=country_values\n",
    "print(ebola_long.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "0b0a0541",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0       [Cases, Guinea]\n",
      "1       [Cases, Guinea]\n",
      "2       [Cases, Guinea]\n",
      "3       [Cases, Guinea]\n",
      "4       [Cases, Guinea]\n",
      "             ...       \n",
      "1947     [Deaths, Mali]\n",
      "1948     [Deaths, Mali]\n",
      "1949     [Deaths, Mali]\n",
      "1950     [Deaths, Mali]\n",
      "1951     [Deaths, Mali]\n",
      "Name: variable, Length: 1952, dtype: object\n"
     ]
    }
   ],
   "source": [
    "print(variable_split)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "590e43a6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "           0       1\n",
      "0      Cases  Guinea\n",
      "1      Cases  Guinea\n",
      "2      Cases  Guinea\n",
      "3      Cases  Guinea\n",
      "4      Cases  Guinea\n",
      "...      ...     ...\n",
      "1947  Deaths    Mali\n",
      "1948  Deaths    Mali\n",
      "1949  Deaths    Mali\n",
      "1950  Deaths    Mali\n",
      "1951  Deaths    Mali\n",
      "\n",
      "[1952 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "variable_split=ebola_long.variable.str.split('_',expand=True)\n",
    "print(variable_split)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "64852e81",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      status country\n",
      "0      Cases  Guinea\n",
      "1      Cases  Guinea\n",
      "2      Cases  Guinea\n",
      "3      Cases  Guinea\n",
      "4      Cases  Guinea\n",
      "...      ...     ...\n",
      "1947  Deaths    Mali\n",
      "1948  Deaths    Mali\n",
      "1949  Deaths    Mali\n",
      "1950  Deaths    Mali\n",
      "1951  Deaths    Mali\n",
      "\n",
      "[1952 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "variable_split.columns=['status','country']\n",
    "print(variable_split)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "3deeb755",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "            Date  Day      variable   value  status country  status country\n",
      "0       1/5/2015  289  Cases_Guinea  2776.0   Cases  Guinea   Cases  Guinea\n",
      "1       1/4/2015  288  Cases_Guinea  2775.0   Cases  Guinea   Cases  Guinea\n",
      "2       1/3/2015  287  Cases_Guinea  2769.0   Cases  Guinea   Cases  Guinea\n",
      "3       1/2/2015  286  Cases_Guinea     NaN   Cases  Guinea   Cases  Guinea\n",
      "4     12/31/2014  284  Cases_Guinea  2730.0   Cases  Guinea   Cases  Guinea\n",
      "...          ...  ...           ...     ...     ...     ...     ...     ...\n",
      "1947   3/27/2014    5   Deaths_Mali     NaN  Deaths    Mali  Deaths    Mali\n",
      "1948   3/26/2014    4   Deaths_Mali     NaN  Deaths    Mali  Deaths    Mali\n",
      "1949   3/25/2014    3   Deaths_Mali     NaN  Deaths    Mali  Deaths    Mali\n",
      "1950   3/24/2014    2   Deaths_Mali     NaN  Deaths    Mali  Deaths    Mali\n",
      "1951   3/22/2014    0   Deaths_Mali     NaN  Deaths    Mali  Deaths    Mali\n",
      "\n",
      "[1952 rows x 8 columns]\n"
     ]
    }
   ],
   "source": [
    "ebola_parsed=pd.concat([ebola_long,variable_split],axis=1)\n",
    "print(ebola_parsed)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4918e8b9",
   "metadata": {},
   "source": [
    "## 여러 열을 하나로 정리하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "b61ad003",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         id  year  month element    d1    d2    d3    d4    d5    d6  ...  \\\n",
      "0   MX17004  2010      1    tmax   NaN   NaN   NaN   NaN   NaN   NaN  ...   \n",
      "1   MX17004  2010      1    tmin   NaN   NaN   NaN   NaN   NaN   NaN  ...   \n",
      "2   MX17004  2010      2    tmax   NaN  27.3  24.1   NaN   NaN   NaN  ...   \n",
      "3   MX17004  2010      2    tmin   NaN  14.4  14.4   NaN   NaN   NaN  ...   \n",
      "4   MX17004  2010      3    tmax   NaN   NaN   NaN   NaN  32.1   NaN  ...   \n",
      "5   MX17004  2010      3    tmin   NaN   NaN   NaN   NaN  14.2   NaN  ...   \n",
      "6   MX17004  2010      4    tmax   NaN   NaN   NaN   NaN   NaN   NaN  ...   \n",
      "7   MX17004  2010      4    tmin   NaN   NaN   NaN   NaN   NaN   NaN  ...   \n",
      "8   MX17004  2010      5    tmax   NaN   NaN   NaN   NaN   NaN   NaN  ...   \n",
      "9   MX17004  2010      5    tmin   NaN   NaN   NaN   NaN   NaN   NaN  ...   \n",
      "10  MX17004  2010      6    tmax   NaN   NaN   NaN   NaN   NaN   NaN  ...   \n",
      "11  MX17004  2010      6    tmin   NaN   NaN   NaN   NaN   NaN   NaN  ...   \n",
      "12  MX17004  2010      7    tmax   NaN   NaN  28.6   NaN   NaN   NaN  ...   \n",
      "13  MX17004  2010      7    tmin   NaN   NaN  17.5   NaN   NaN   NaN  ...   \n",
      "14  MX17004  2010      8    tmax   NaN   NaN   NaN   NaN  29.6   NaN  ...   \n",
      "15  MX17004  2010      8    tmin   NaN   NaN   NaN   NaN  15.8   NaN  ...   \n",
      "16  MX17004  2010     10    tmax   NaN   NaN   NaN   NaN  27.0   NaN  ...   \n",
      "17  MX17004  2010     10    tmin   NaN   NaN   NaN   NaN  14.0   NaN  ...   \n",
      "18  MX17004  2010     11    tmax   NaN  31.3   NaN  27.2  26.3   NaN  ...   \n",
      "19  MX17004  2010     11    tmin   NaN  16.3   NaN  12.0   7.9   NaN  ...   \n",
      "20  MX17004  2010     12    tmax  29.9   NaN   NaN   NaN   NaN  27.8  ...   \n",
      "21  MX17004  2010     12    tmin  13.8   NaN   NaN   NaN   NaN  10.5  ...   \n",
      "\n",
      "    d22   d23  d24   d25   d26   d27   d28   d29   d30   d31  \n",
      "0   NaN   NaN  NaN   NaN   NaN   NaN   NaN   NaN  27.8   NaN  \n",
      "1   NaN   NaN  NaN   NaN   NaN   NaN   NaN   NaN  14.5   NaN  \n",
      "2   NaN  29.9  NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  \n",
      "3   NaN  10.7  NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  \n",
      "4   NaN   NaN  NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  \n",
      "5   NaN   NaN  NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  \n",
      "6   NaN   NaN  NaN   NaN   NaN  36.3   NaN   NaN   NaN   NaN  \n",
      "7   NaN   NaN  NaN   NaN   NaN  16.7   NaN   NaN   NaN   NaN  \n",
      "8   NaN   NaN  NaN   NaN   NaN  33.2   NaN   NaN   NaN   NaN  \n",
      "9   NaN   NaN  NaN   NaN   NaN  18.2   NaN   NaN   NaN   NaN  \n",
      "10  NaN   NaN  NaN   NaN   NaN   NaN   NaN  30.1   NaN   NaN  \n",
      "11  NaN   NaN  NaN   NaN   NaN   NaN   NaN  18.0   NaN   NaN  \n",
      "12  NaN   NaN  NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  \n",
      "13  NaN   NaN  NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  \n",
      "14  NaN  26.4  NaN  29.7   NaN   NaN   NaN  28.0   NaN  25.4  \n",
      "15  NaN  15.0  NaN  15.6   NaN   NaN   NaN  15.3   NaN  15.4  \n",
      "16  NaN   NaN  NaN   NaN   NaN   NaN  31.2   NaN   NaN   NaN  \n",
      "17  NaN   NaN  NaN   NaN   NaN   NaN  15.0   NaN   NaN   NaN  \n",
      "18  NaN   NaN  NaN   NaN  28.1  27.7   NaN   NaN   NaN   NaN  \n",
      "19  NaN   NaN  NaN   NaN  12.1  14.2   NaN   NaN   NaN   NaN  \n",
      "20  NaN   NaN  NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  \n",
      "21  NaN   NaN  NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  \n",
      "\n",
      "[22 rows x 35 columns]\n"
     ]
    }
   ],
   "source": [
    "weather=pd.read_csv('C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data/weather.csv')\n",
    "print(weather)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "78fc2a5a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          id  year  month element  day  temp\n",
      "0    MX17004  2010      1    tmax   d1   NaN\n",
      "1    MX17004  2010      1    tmin   d1   NaN\n",
      "2    MX17004  2010      2    tmax   d1   NaN\n",
      "3    MX17004  2010      2    tmin   d1   NaN\n",
      "4    MX17004  2010      3    tmax   d1   NaN\n",
      "..       ...   ...    ...     ...  ...   ...\n",
      "677  MX17004  2010     10    tmin  d31   NaN\n",
      "678  MX17004  2010     11    tmax  d31   NaN\n",
      "679  MX17004  2010     11    tmin  d31   NaN\n",
      "680  MX17004  2010     12    tmax  d31   NaN\n",
      "681  MX17004  2010     12    tmin  d31   NaN\n",
      "\n",
      "[682 rows x 6 columns]\n"
     ]
    }
   ],
   "source": [
    "weather_melt=pd.melt(weather,id_vars=['id','year','month','element'],var_name='day',value_name='temp')\n",
    "print(weather_melt)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7760b96b",
   "metadata": {},
   "source": [
    "- pivot_table(): 행과 열의 위치를 다시 바꿔 정리해 준다. index 인자에는 위치를 그대로 유지할 열 이름을 지정하고, columns 인자에는 피벗할 열 이름을 지정하고, values 인자에는 새로운 열의 데이터가 될 열 이름을 지정하면 된다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "7af3a9df",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "element                 tmax  tmin\n",
      "id      year month day            \n",
      "MX17004 2010 1     d1    NaN   NaN\n",
      "                   d10   NaN   NaN\n",
      "                   d11   NaN   NaN\n",
      "                   d12   NaN   NaN\n",
      "                   d13   NaN   NaN\n",
      "...                      ...   ...\n",
      "             12    d5    NaN   NaN\n",
      "                   d6   27.8  10.5\n",
      "                   d7    NaN   NaN\n",
      "                   d8    NaN   NaN\n",
      "                   d9    NaN   NaN\n",
      "\n",
      "[341 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "weather_tidy=weather_melt.pivot_table(\n",
    "    index=['id','year','month','day'],\n",
    "    columns='element',\n",
    "    values='temp',\n",
    "    dropna=False)\n",
    "print(weather_tidy)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dda6f667",
   "metadata": {},
   "source": [
    "- reset_index(): 다음 테이블은 꽉 채워서 보여줌"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "c83b41d3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "element       id  year  month  day  tmax  tmin\n",
      "0        MX17004  2010      1   d1   NaN   NaN\n",
      "1        MX17004  2010      1  d10   NaN   NaN\n",
      "2        MX17004  2010      1  d11   NaN   NaN\n",
      "3        MX17004  2010      1  d12   NaN   NaN\n",
      "4        MX17004  2010      1  d13   NaN   NaN\n",
      "..           ...   ...    ...  ...   ...   ...\n",
      "336      MX17004  2010     12   d5   NaN   NaN\n",
      "337      MX17004  2010     12   d6  27.8  10.5\n",
      "338      MX17004  2010     12   d7   NaN   NaN\n",
      "339      MX17004  2010     12   d8   NaN   NaN\n",
      "340      MX17004  2010     12   d9   NaN   NaN\n",
      "\n",
      "[341 rows x 6 columns]\n"
     ]
    }
   ],
   "source": [
    "weather_tidy_flat=weather_tidy.reset_index()\n",
    "print(weather_tidy_flat)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "840c4ce6",
   "metadata": {},
   "source": [
    "## 중복 데이터 처리하기\n",
    "- billboard 데이터에서 노래제목(track)이 Loser인 데이터는 중복이 꽤 많다. 가수는 고유한 값이기 때문에 따로 관리하는 것이 데이터의 일관성을 유지하는 데 더 도움이 된다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "9031e94d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>artist</th>\n",
       "      <th>track</th>\n",
       "      <th>time</th>\n",
       "      <th>date.entered</th>\n",
       "      <th>week</th>\n",
       "      <th>rating</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2000</td>\n",
       "      <td>2 Pac</td>\n",
       "      <td>Baby Don't Cry (Keep...</td>\n",
       "      <td>4:22</td>\n",
       "      <td>2000-02-26</td>\n",
       "      <td>wk1</td>\n",
       "      <td>87.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2000</td>\n",
       "      <td>2Ge+her</td>\n",
       "      <td>The Hardest Part Of ...</td>\n",
       "      <td>3:15</td>\n",
       "      <td>2000-09-02</td>\n",
       "      <td>wk1</td>\n",
       "      <td>91.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2000</td>\n",
       "      <td>3 Doors Down</td>\n",
       "      <td>Kryptonite</td>\n",
       "      <td>3:53</td>\n",
       "      <td>2000-04-08</td>\n",
       "      <td>wk1</td>\n",
       "      <td>81.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2000</td>\n",
       "      <td>3 Doors Down</td>\n",
       "      <td>Loser</td>\n",
       "      <td>4:24</td>\n",
       "      <td>2000-10-21</td>\n",
       "      <td>wk1</td>\n",
       "      <td>76.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2000</td>\n",
       "      <td>504 Boyz</td>\n",
       "      <td>Wobble Wobble</td>\n",
       "      <td>3:35</td>\n",
       "      <td>2000-04-15</td>\n",
       "      <td>wk1</td>\n",
       "      <td>57.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24087</th>\n",
       "      <td>2000</td>\n",
       "      <td>Yankee Grey</td>\n",
       "      <td>Another Nine Minutes</td>\n",
       "      <td>3:10</td>\n",
       "      <td>2000-04-29</td>\n",
       "      <td>wk76</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24088</th>\n",
       "      <td>2000</td>\n",
       "      <td>Yearwood, Trisha</td>\n",
       "      <td>Real Live Woman</td>\n",
       "      <td>3:55</td>\n",
       "      <td>2000-04-01</td>\n",
       "      <td>wk76</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24089</th>\n",
       "      <td>2000</td>\n",
       "      <td>Ying Yang Twins</td>\n",
       "      <td>Whistle While You Tw...</td>\n",
       "      <td>4:19</td>\n",
       "      <td>2000-03-18</td>\n",
       "      <td>wk76</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24090</th>\n",
       "      <td>2000</td>\n",
       "      <td>Zombie Nation</td>\n",
       "      <td>Kernkraft 400</td>\n",
       "      <td>3:30</td>\n",
       "      <td>2000-09-02</td>\n",
       "      <td>wk76</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24091</th>\n",
       "      <td>2000</td>\n",
       "      <td>matchbox twenty</td>\n",
       "      <td>Bent</td>\n",
       "      <td>4:12</td>\n",
       "      <td>2000-04-29</td>\n",
       "      <td>wk76</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>24092 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       year            artist                    track  time date.entered  \\\n",
       "0      2000             2 Pac  Baby Don't Cry (Keep...  4:22   2000-02-26   \n",
       "1      2000           2Ge+her  The Hardest Part Of ...  3:15   2000-09-02   \n",
       "2      2000      3 Doors Down               Kryptonite  3:53   2000-04-08   \n",
       "3      2000      3 Doors Down                    Loser  4:24   2000-10-21   \n",
       "4      2000          504 Boyz            Wobble Wobble  3:35   2000-04-15   \n",
       "...     ...               ...                      ...   ...          ...   \n",
       "24087  2000       Yankee Grey     Another Nine Minutes  3:10   2000-04-29   \n",
       "24088  2000  Yearwood, Trisha          Real Live Woman  3:55   2000-04-01   \n",
       "24089  2000   Ying Yang Twins  Whistle While You Tw...  4:19   2000-03-18   \n",
       "24090  2000     Zombie Nation            Kernkraft 400  3:30   2000-09-02   \n",
       "24091  2000   matchbox twenty                     Bent  4:12   2000-04-29   \n",
       "\n",
       "       week  rating  \n",
       "0       wk1    87.0  \n",
       "1       wk1    91.0  \n",
       "2       wk1    81.0  \n",
       "3       wk1    76.0  \n",
       "4       wk1    57.0  \n",
       "...     ...     ...  \n",
       "24087  wk76     NaN  \n",
       "24088  wk76     NaN  \n",
       "24089  wk76     NaN  \n",
       "24090  wk76     NaN  \n",
       "24091  wk76     NaN  \n",
       "\n",
       "[24092 rows x 7 columns]"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "billboard_long"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "910e35d1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       year        artist  track  time date.entered  week  rating\n",
      "3      2000  3 Doors Down  Loser  4:24   2000-10-21   wk1    76.0\n",
      "320    2000  3 Doors Down  Loser  4:24   2000-10-21   wk2    76.0\n",
      "637    2000  3 Doors Down  Loser  4:24   2000-10-21   wk3    72.0\n",
      "954    2000  3 Doors Down  Loser  4:24   2000-10-21   wk4    69.0\n",
      "1271   2000  3 Doors Down  Loser  4:24   2000-10-21   wk5    67.0\n",
      "...     ...           ...    ...   ...          ...   ...     ...\n",
      "22510  2000  3 Doors Down  Loser  4:24   2000-10-21  wk72     NaN\n",
      "22827  2000  3 Doors Down  Loser  4:24   2000-10-21  wk73     NaN\n",
      "23144  2000  3 Doors Down  Loser  4:24   2000-10-21  wk74     NaN\n",
      "23461  2000  3 Doors Down  Loser  4:24   2000-10-21  wk75     NaN\n",
      "23778  2000  3 Doors Down  Loser  4:24   2000-10-21  wk76     NaN\n",
      "\n",
      "[76 rows x 7 columns]\n"
     ]
    }
   ],
   "source": [
    "print(billboard_long[billboard_long.track=='Loser'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "654a2b39",
   "metadata": {},
   "source": [
    "- 중복 데이터를 가지고 있는 열은 year, artist, track, time, date 이다. 이 열을 따로 모아 새로운 데이터 프레임에 저장한다.\n",
    "- drop_duplicates(): 중복 데이터 제거"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "4f13da65",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       year            artist                    track  time\n",
      "0      2000             2 Pac  Baby Don't Cry (Keep...  4:22\n",
      "1      2000           2Ge+her  The Hardest Part Of ...  3:15\n",
      "2      2000      3 Doors Down               Kryptonite  3:53\n",
      "3      2000      3 Doors Down                    Loser  4:24\n",
      "4      2000          504 Boyz            Wobble Wobble  3:35\n",
      "...     ...               ...                      ...   ...\n",
      "24087  2000       Yankee Grey     Another Nine Minutes  3:10\n",
      "24088  2000  Yearwood, Trisha          Real Live Woman  3:55\n",
      "24089  2000   Ying Yang Twins  Whistle While You Tw...  4:19\n",
      "24090  2000     Zombie Nation            Kernkraft 400  3:30\n",
      "24091  2000   matchbox twenty                     Bent  4:12\n",
      "\n",
      "[24092 rows x 4 columns]\n"
     ]
    }
   ],
   "source": [
    "billboard_songs=billboard_long[['year','artist','track','time']]\n",
    "print(billboard_songs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "122b5d54",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     year            artist                    track  time\n",
      "0    2000             2 Pac  Baby Don't Cry (Keep...  4:22\n",
      "1    2000           2Ge+her  The Hardest Part Of ...  3:15\n",
      "2    2000      3 Doors Down               Kryptonite  3:53\n",
      "3    2000      3 Doors Down                    Loser  4:24\n",
      "4    2000          504 Boyz            Wobble Wobble  3:35\n",
      "..    ...               ...                      ...   ...\n",
      "312  2000       Yankee Grey     Another Nine Minutes  3:10\n",
      "313  2000  Yearwood, Trisha          Real Live Woman  3:55\n",
      "314  2000   Ying Yang Twins  Whistle While You Tw...  4:19\n",
      "315  2000     Zombie Nation            Kernkraft 400  3:30\n",
      "316  2000   matchbox twenty                     Bent  4:12\n",
      "\n",
      "[317 rows x 4 columns]\n"
     ]
    }
   ],
   "source": [
    "billboard_songs=billboard_songs.drop_duplicates()\n",
    "print(billboard_songs)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "577bbf6a",
   "metadata": {},
   "source": [
    "- 중복을 제거한 데이터프레임에 id를 추가하여 데이터를 쉽게 조회하거나 구분하기 쉽게한다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "23be617d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     year            artist                    track  time   id\n",
      "0    2000             2 Pac  Baby Don't Cry (Keep...  4:22    0\n",
      "1    2000           2Ge+her  The Hardest Part Of ...  3:15    1\n",
      "2    2000      3 Doors Down               Kryptonite  3:53    2\n",
      "3    2000      3 Doors Down                    Loser  4:24    3\n",
      "4    2000          504 Boyz            Wobble Wobble  3:35    4\n",
      "..    ...               ...                      ...   ...  ...\n",
      "312  2000       Yankee Grey     Another Nine Minutes  3:10  312\n",
      "313  2000  Yearwood, Trisha          Real Live Woman  3:55  313\n",
      "314  2000   Ying Yang Twins  Whistle While You Tw...  4:19  314\n",
      "315  2000     Zombie Nation            Kernkraft 400  3:30  315\n",
      "316  2000   matchbox twenty                     Bent  4:12  316\n",
      "\n",
      "[317 rows x 5 columns]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\re2te\\AppData\\Local\\Temp\\ipykernel_9112\\1576445651.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  billboard_songs['id']=range(len(billboard_songs))\n"
     ]
    }
   ],
   "source": [
    "billboard_songs['id']=range(len(billboard_songs))\n",
    "print(billboard_songs)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "534b408a",
   "metadata": {},
   "source": [
    "- merge()를 이용하여 노래 정보와 주간 순위 데이터를 합칠 수 있다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "08020545",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>artist</th>\n",
       "      <th>track</th>\n",
       "      <th>time</th>\n",
       "      <th>date.entered</th>\n",
       "      <th>week</th>\n",
       "      <th>rating</th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2000</td>\n",
       "      <td>2 Pac</td>\n",
       "      <td>Baby Don't Cry (Keep...</td>\n",
       "      <td>4:22</td>\n",
       "      <td>2000-02-26</td>\n",
       "      <td>wk1</td>\n",
       "      <td>87.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2000</td>\n",
       "      <td>2 Pac</td>\n",
       "      <td>Baby Don't Cry (Keep...</td>\n",
       "      <td>4:22</td>\n",
       "      <td>2000-02-26</td>\n",
       "      <td>wk2</td>\n",
       "      <td>82.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2000</td>\n",
       "      <td>2 Pac</td>\n",
       "      <td>Baby Don't Cry (Keep...</td>\n",
       "      <td>4:22</td>\n",
       "      <td>2000-02-26</td>\n",
       "      <td>wk3</td>\n",
       "      <td>72.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2000</td>\n",
       "      <td>2 Pac</td>\n",
       "      <td>Baby Don't Cry (Keep...</td>\n",
       "      <td>4:22</td>\n",
       "      <td>2000-02-26</td>\n",
       "      <td>wk4</td>\n",
       "      <td>77.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2000</td>\n",
       "      <td>2 Pac</td>\n",
       "      <td>Baby Don't Cry (Keep...</td>\n",
       "      <td>4:22</td>\n",
       "      <td>2000-02-26</td>\n",
       "      <td>wk5</td>\n",
       "      <td>87.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24087</th>\n",
       "      <td>2000</td>\n",
       "      <td>matchbox twenty</td>\n",
       "      <td>Bent</td>\n",
       "      <td>4:12</td>\n",
       "      <td>2000-04-29</td>\n",
       "      <td>wk72</td>\n",
       "      <td>NaN</td>\n",
       "      <td>316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24088</th>\n",
       "      <td>2000</td>\n",
       "      <td>matchbox twenty</td>\n",
       "      <td>Bent</td>\n",
       "      <td>4:12</td>\n",
       "      <td>2000-04-29</td>\n",
       "      <td>wk73</td>\n",
       "      <td>NaN</td>\n",
       "      <td>316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24089</th>\n",
       "      <td>2000</td>\n",
       "      <td>matchbox twenty</td>\n",
       "      <td>Bent</td>\n",
       "      <td>4:12</td>\n",
       "      <td>2000-04-29</td>\n",
       "      <td>wk74</td>\n",
       "      <td>NaN</td>\n",
       "      <td>316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24090</th>\n",
       "      <td>2000</td>\n",
       "      <td>matchbox twenty</td>\n",
       "      <td>Bent</td>\n",
       "      <td>4:12</td>\n",
       "      <td>2000-04-29</td>\n",
       "      <td>wk75</td>\n",
       "      <td>NaN</td>\n",
       "      <td>316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24091</th>\n",
       "      <td>2000</td>\n",
       "      <td>matchbox twenty</td>\n",
       "      <td>Bent</td>\n",
       "      <td>4:12</td>\n",
       "      <td>2000-04-29</td>\n",
       "      <td>wk76</td>\n",
       "      <td>NaN</td>\n",
       "      <td>316</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>24092 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       year           artist                    track  time date.entered  \\\n",
       "0      2000            2 Pac  Baby Don't Cry (Keep...  4:22   2000-02-26   \n",
       "1      2000            2 Pac  Baby Don't Cry (Keep...  4:22   2000-02-26   \n",
       "2      2000            2 Pac  Baby Don't Cry (Keep...  4:22   2000-02-26   \n",
       "3      2000            2 Pac  Baby Don't Cry (Keep...  4:22   2000-02-26   \n",
       "4      2000            2 Pac  Baby Don't Cry (Keep...  4:22   2000-02-26   \n",
       "...     ...              ...                      ...   ...          ...   \n",
       "24087  2000  matchbox twenty                     Bent  4:12   2000-04-29   \n",
       "24088  2000  matchbox twenty                     Bent  4:12   2000-04-29   \n",
       "24089  2000  matchbox twenty                     Bent  4:12   2000-04-29   \n",
       "24090  2000  matchbox twenty                     Bent  4:12   2000-04-29   \n",
       "24091  2000  matchbox twenty                     Bent  4:12   2000-04-29   \n",
       "\n",
       "       week  rating   id  \n",
       "0       wk1    87.0    0  \n",
       "1       wk2    82.0    0  \n",
       "2       wk3    72.0    0  \n",
       "3       wk4    77.0    0  \n",
       "4       wk5    87.0    0  \n",
       "...     ...     ...  ...  \n",
       "24087  wk72     NaN  316  \n",
       "24088  wk73     NaN  316  \n",
       "24089  wk74     NaN  316  \n",
       "24090  wk75     NaN  316  \n",
       "24091  wk76     NaN  316  \n",
       "\n",
       "[24092 rows x 8 columns]"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "billboard_ratings=billboard_long.merge(billboard_songs,on=['year','artist','track','time'])\n",
    "billboard_ratings"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "870c0352",
   "metadata": {},
   "source": [
    "## 대용량 데이터 처리하기\n",
    "### 여러개로 나누어진 데이터를 신속하게 불러오기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "de47fe47",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\"\\nimport os\\nimport urllib.request\\n\\nwith open('C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data/raw_data_urls.txt','r') as data_urls:\\n    for line, url in enumerate(data_uris):\\n        if line==5:\\n            break\\n        fn=url.split('/')[-1].strip()\\n        fp=os.path.join('','C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data',fn)\\n        print(url)\\n        print(fp)\\n        urllib.request.urlretrieve(url,fp)\\n\""
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''\n",
    "import os\n",
    "import urllib.request\n",
    "\n",
    "with open('C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data/raw_data_urls.txt','r') as data_urls:\n",
    "    for line, url in enumerate(data_uris):\n",
    "        if line==5:\n",
    "            break\n",
    "        fn=url.split('/')[-1].strip()\n",
    "        fp=os.path.join('','C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data',fn)\n",
    "        print(url)\n",
    "        print(fp)\n",
    "        urllib.request.urlretrieve(url,fp)\n",
    "'''"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49ec4709",
   "metadata": {},
   "source": [
    "- glob():특정한 패턴의 이름을 가진 파일을 한번에 읽어 드릴 수 있다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "e4d230d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\"\\nimport glob\\nnyc_taxi_data=glob.glob('C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data/fhv_*')\\nprint(nyc_taxi_data)\\n\""
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''\n",
    "import glob\n",
    "nyc_taxi_data=glob.glob('C:/Users/re2te/Desktop/슬기로운 20대생활/doit_pandas-master/data/fhv_*')\n",
    "print(nyc_taxi_data)\n",
    "'''\n",
    "# 이후 읽어드린 nyc_taxi_data[0:5]를 모두 concat을 사용하여 합치면 끝"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "59c75e09",
   "metadata": {},
   "source": [
    "## 판다스 자료형"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6b62c825",
   "metadata": {},
   "outputs": [],
   "source": [
    "n=22\n",
    "count=0\n",
    "while n!=0:\n",
    "    if n%2==0:\n",
    "        n=n//2\n",
    "    else:\n",
    "        n=3*n+1\n",
    "    count+=1\n",
    "print(count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d0d5fc65",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "re2ter",
   "language": "python",
   "name": "re2ter"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
